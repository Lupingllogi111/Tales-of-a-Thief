--[[
    init.lua
    Created: 12/23/2023 12:19:14
    Description: Autogenerated script file for the map conceal_forest.
]]--
-- Commonly included lua functions and data
require 'common'

-- Package name
local conceal_forest = {}

-------------------------------
-- Zone Callbacks
-------------------------------
---conceal_forest.Init(zone)
--Engine callback function
function conceal_forest.Init(zone)
    GAME:CutsceneMode(false)
end

---conceal_forest.EnterSegment(zone, rescuing, segmentID, mapID)
--Engine callback function
function conceal_forest.EnterSegment(zone, rescuing, segmentID, mapID)
    

end

---conceal_forest.ExitSegment(zone, result, rescue, segmentID, mapID)
--Engine callback function
function conceal_forest.ExitSegment(zone, result, rescue, segmentID, mapID)
    
    if SV.conceal_forest_entrance.found_player == false then
        if result ~= RogueEssence.Data.GameProgress.ResultType.Cleared then
            GAME:EnterZone("conceal_forest", -1, 0, 1)

            GAME:EndDungeonRun(result, "conceal_forest", -1, 0, 1, false, false)
        elseif result == RogueEssence.Data.GameProgress.ResultType.Cleared then
                
            GAME:EnterZone("conceal_forest", -1, 1, 0)
                   
            GAME:EndDungeonRun(result, "conceal_forest", -1, 1, 0, false, false)

                      
        end
    elseif SV.conceal_forest_entrance.found_player == true then
        if result ~= RogueEssence.Data.GameProgress.ResultType.Cleared then
           
           --Later
         

         
        elseif result == RogueEssence.Data.GameProgress.ResultType.Cleared then
            --Later
               
            
           
                  
        end

    
    end
end

---conceal_forest.Rescued(zone, name, mail)
--Engine callback function
function conceal_forest.Rescued(zone, name, mail)


end

return conceal_forest

