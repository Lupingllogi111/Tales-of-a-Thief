--[[
    init.lua
    Created: 12/20/2023 18:24:01
    Description: Autogenerated script file for the map new_hope_town_houses_cutscene.
]]--
-- Commonly included lua functions and data
require 'common'

-- Package name
local conceal_forest_entrance = {}

-- Local, localized strings table
-- Use this to display the named strings you added in the strings files for the map!
-- Ex:
--      local localizedstring = MapStrings['SomeStringName']
local MapStrings = {}

-------------------------------
-- Map Callbacks
-------------------------------

--Engine callback function
function conceal_forest_entrance.Init(map)

  --This will fill the localized strings table automatically based on the locale the game is 
  -- currently in. You can use the MapStrings table after this line!
  MapStrings = COMMON.AutoLoadLocalizedStrings()
  --COMMON.RespawnStarterPartner()
  --local partner = CH('Partner')
  --AI:SetCharacterAI(partner, "ai.ground_partner", CH('PLAYER'), partner.Position)
  --partner.CollisionDisabled = true
  GROUND:AddMapStatus("clouds_overhead")
  if SV.conceal_forest_entrance.first_cutscene == true then
    partner = CH('Teammate1')
    GROUND:Hide('Boss')
    GROUND:Hide('Team Overcharge Minun')
    GROUND:Hide('Team Overcharge Plusle')
    GROUND:Hide('Shopkeeper')
    GROUND:Hide('Partner')
    

  end
  if SV.conceal_forest_entrance.found_player then
  COMMON.RespawnAllies()
  local partners = CH('Teammate1')
  AI:SetCharacterAI(partners, "ai.ground_partner", CH('PLAYER'), partners.Position)
  AI:EnableCharacterAI(partners)
  partners.CollisionDisabled = true

  end
end


--Engine callback function
function conceal_forest_entrance.Enter(map)
local partners = CH('Teammate1')
 if SV.conceal_forest_entrance.first_cutscene == false and SV.conceal_forest_entrance.found_player == false then --Checks if the intro has been done, and if not, do it
  intro()
 elseif SV.conceal_forest_entrance.first_cutscene == true and SV.conceal_forest_entrance.found_player == false then --Checks if the intro is done, AND if the player was found. Here, you failed to complete the dungeon, so you get the fainted cutscene
 faintedCutscene()
 
  elseif SV.conceal_forest_entrance.first_cutscene == true and SV.conceal_forest_entrance.found_player == true then --Checks if the intro is done, AND if the player was found. Nothing will be put inside, as nothing has to run in this map if this two are true
    --doStuff(false)
    --Totally a real function, but gave me bugs.
   AI:DisableCharacterAI(partners)

   if SV.partner.entrance == 0 then
 
   elseif SV.partner.entrance == 1 then
     
    local marker = MRKR('mrkr_4')
 
    GROUND:TeleportTo(partners, marker.Position.X, marker.Position.Y, marker.Direction)
 
    
   end
   AI:SetCharacterAI(partners, "ai.ground_partner", CH('PLAYER'), partners.Position)
   AI:EnableCharacterAI(partners)
   partners.CollisionDisabled = true
   GAME:FadeIn(20)

 end
 
end
--[[
 This is for later. Just putting it here. (Player name)
      UI:NameMenu("What will your name be?", "", 60)
			UI:WaitForChoice()
			result = UI:ChoiceResult()
			GAME:SetCharacterNickname(GAME:GetPlayerPartyMember(0), result)




]]


function Hop(chara, anim, height, duration, pause, sound)
  anim = anim or 'None'
  height = height or 10
  duration = duration or 10
  if pause == nil then pause = true end
  if sound == nil then sound = false end

  local animId = RogueEssence.Content.GraphicsManager.GetAnimIndex(anim)
  GROUND:CharSetAction(chara, RogueEssence.Ground.HopGroundAction(chara.Position, chara.Direction, animId, height, duration))
  
  if sound then
      SOUND:PlayBattleSE("EVT_Emote_Startled")
  end
  
  if pause then 
      GAME:WaitFrames(duration)
  end

end
function faintedCutscene()

  local player = CH('PLAYER')
  GAME:CutsceneMode(true)
  GROUND:EntTurn(player, Direction.Right)
  GROUND:CharSetAction(player, RogueEssence.Ground.PoseGroundAction(player.Position, player.Direction, RogueEssence.Content.GraphicsManager.GetAnimIndex("Laying")))
  GAME:WaitFrames(60)
  GAME:FadeIn(30)
  GAME:WaitFrames(60)
  GROUND:CharSetDrawEffect(player, DrawEffect.Trembling)
  GAME:WaitFrames(20)
  GROUND:CharEndDrawEffect(player, DrawEffect.Trembling)
  UI:SetSpeaker(player)
  GAME:WaitFrames(60)
  UI:SetSpeakerEmotion("Pain")
  UI:WaitShowDialogue("Ugh...")
  UI:WaitShowDialogue("This was harder than I thought...")

  GAME:WaitFrames(40)
  GROUND:CharSetAnim(player, "Wake", false)
  GAME:WaitFrames(40)
  UI:SetSpeakerEmotion("Determined")
  UI:WaitShowDialogue("But I can't let this bring me down!")
  UI:WaitShowDialogue("I'll have to try again until I make it to the end!")
  SOUND:PlayBGM("B26. Ambush Forest.ogg", true) 
  GAME:CutsceneMode(false)

end
function intro()
  --Introduction to the game if the player has not yet been found
  GAME:MoveCamera(647, 144, 1, false)
  GAME:WaitFrames(100)

  UI:WaitShowTitle("Chapter 1\n\nA new beggining\n", 20)
  GAME:WaitFrames(180)
  UI:WaitHideTitle(20)
  GAME:WaitFrames(180)


  UI:WaitShowVoiceOver("This fangame is based around the life of the protagonist as a criminal.", -1)
  UI:WaitShowVoiceOver("As such, some obscene language and dark themes may be included.", -1)

  GAME:WaitFrames(200)
  GAME:CutsceneMode(true)

  



  --I took this from Halcyon's code. Please Palika, don't kill me :Â´(
    
  


    local assembly_count = GAME:GetPlayerAssemblyCount()
    for i = 1, assembly_count, 1 do
      _DATA.Save.ActiveTeam.Assembly.RemoveAt(i-1)
      
    end 
  
  _DATA.Save.ActiveTeam:SetRank("unranked")
	_DATA.Save.ActiveTeam.Money = 0
	_DATA.Save.ActiveTeam.Bank = 0
	_DATA.Save.NoSwitching = true

  local party_count = _DATA.Save.ActiveTeam.Players.Count
	for ii = 1, party_count, 1 do
		_DATA.Save.ActiveTeam.Players:RemoveAt(0)
	end





 -- _DATA.Save.ActiveTeam.Players:Add(_DATA.Save.ActiveTeam:CreatePlayer(_DATA.Save.Rand, RogueEssence.Dungeon.MonsterID("riolu", 0, "normal", Gender.Male), 5, "inner_focus", 0))
  _DATA.Save.ActiveTeam.Players:Add(_DATA.Save.ActiveTeam:CreatePlayer(_DATA.Save.Rand, RogueEssence.Dungeon.MonsterID("sprigatito", 0, "normal", Gender.Female), 5, "overgrow", 0))

 _DATA.Save.ActiveTeam.Players[0]:FullRestore()
 --_DATA.Save.ActiveTeam.Players[1]:FullRestore()
 
 
 
  GAME:SetTeamLeaderIndex(0)
 
  _DATA.Save:UpdateTeamProfile(true)
  _DATA.Save.ActiveTeam.Players[0].IsFounder = true
  _DATA.Save.ActiveTeam.Players[0].IsPartner = true

  --Use this later
  --_DATA.Save.ActiveTeam.Players[1].IsFounder = true
  --_DATA.Save.ActiveTeam.Players[1].IsPartner = true



 -- local partnerForNickname = GAME:GetPlayerPartyMember(1)

 --_DATA.Save.ActiveTeam.Assembly.RemoveAt(0)
 --_DATA.Save.ActiveTeam.Players:RemoveAt(0)
  GAME:SetTeamName("Sprigatito") --Set this to the partner cus she's alone


  --local hero = GAME:GetPlayerPartyMember(0)

    local partner = CH('Partner')

 

  local partnerDialogue = GAME:GetPlayerPartyMember(0)
  --GAME:RemovePlayerTeam(0)
  local player = CH('PLAYER')
  
 
 
 
  --AI:SetCharacterAI(THEPartner, "ai.ground_partner", CH('PLAYER'), THEPartner.Position)
  --THEPartner.CollisionDisabled = true
  --AI:SetCharacterAI(THEPartner, "ai.player", CH('PLAYER'), THEPartner.Position)
  --local test = CH('Teammate1')
 -- GAME:SetCharacterNickname(player, "[color=#fff30a]Sprigatito[color]")
 -- GAME:SetCharacterNickname(partnerDialogue, "[color=#fff30a]Sprigatito[color]")

  
 GAME:SetCharacterNickname(partnerDialogue, "[color=#fff30a]Sprigatito[color]")
 GAME:SetCharacterNickname(player, "[color=#fff30a]Sprigatito[color]")
 
 local boss = CH('Boss')
 local minun = CH('Team Overcharge Minun')
 local plusle = CH('Team Overcharge Plusle')
 local shopkeeper = CH('Shopkeeper')

  --[
  UI:SetSpeaker(STRINGS:Format("\\uE040"), true, "", -1, "", RogueEssence.Data.Gender.Unknown)
  GAME:WaitFrames(200)
  --
  
  UI:WaitShowDialogue("Ohh... Look at all this juicy loot!")

  GAME:WaitFrames(60)
 
  UI:WaitShowDialogue("This will make a fine addition to our collection!")

  GAME:WaitFrames(100)
  
  UI:WaitShowDialogue("Can't believe our first field operation was this successful...")

  GAME:WaitFrames(60)
  
  UI:WaitShowDialogue("Come on, bro!")
  UI:WaitShowDialogue("You can't be this pessimistic everyday!")
  GAME:WaitFrames(120)
  
  UI:WaitShowDialogue("Be quiet!")
  UI:WaitShowDialogue("If we get caught because of your chattering, there will be consequences!")

  SOUND:PlaySE("Battle/EVT_Emote_Sweatdrop")
  GAME:WaitFrames(60)
  UI:WaitShowDialogue("Alright, [color=#03f8fc]Ma'am[color]...")
  GAME:WaitFrames(60)
  UI:WaitShowDialogue("That's better.")
  UI:WaitShowDialogue("Now, let's keep on moving.")

  GAME:FadeIn(30)

  GAME:WaitFrames(100)
  GROUND:MoveToPosition(boss, 690, 145, false, 1.5)
  GAME:WaitFrames(10)
  GROUND:EntTurn(boss, Direction.DownRight)
  GAME:WaitFrames(3)
  GROUND:EntTurn(boss, Direction.Down)
  GAME:WaitFrames(3)
  GROUND:EntTurn(boss, Direction.DownLeft)
  GAME:WaitFrames(3)
  GROUND:EntTurn(boss, Direction.Left)
  --GAME:WaitFrames(10)

  local coro1 = TASK:BranchCoroutine(function() conceal_forest_entrance.Walk_Sequence(plusle) end)
  local coro2 = TASK:BranchCoroutine(function() conceal_forest_entrance.Walk_Sequence(minun) end)
  local coro3 = TASK:BranchCoroutine(function() conceal_forest_entrance.Walk_Sequence(shopkeeper) end)
  --GROUND:MoveToPosition(minun, 650, 136, false, 1)
  --GROUND:MoveToPosition(plusle, 680, 151, false, 1)
 -- GROUND:MoveToPosition(shopkeeper, 620, 143, false, 1)
  --GROUND:CharAnimateTurn(player, Direction.DownLeft, 4)
   
  TASK:JoinCoroutines({coro1,coro2,coro3})

 

  GAME:WaitFrames(40)
  
  UI:SetSpeaker(STRINGS:Format("\\uE040"), true, boss.CurrentForm.Species, boss.CurrentForm.Form, boss.CurrentForm.Skin, boss.CurrentForm.Gender)
  UI:WaitShowDialogue("Very well, is everyone here?")
  GAME:WaitFrames(60)

  UI:SetSpeaker(STRINGS:Format("\\uE040"), true, plusle.CurrentForm.Species, plusle.CurrentForm.Form, plusle.CurrentForm.Skin, plusle.CurrentForm.Gender)
  UI:SetSpeakerEmotion("Joyous")
  UI:WaitShowDialogue("Yup! Right here!")
  GAME:WaitFrames(10)

  UI:SetSpeaker(STRINGS:Format("\\uE040"), true, minun.CurrentForm.Species, minun.CurrentForm.Form, minun.CurrentForm.Skin, minun.CurrentForm.Gender)
  UI:SetSpeakerEmotion("Pain")
  UI:WaitShowDialogue("Y-Yeah...")
  GAME:WaitFrames(50)



  UI:SetSpeaker(STRINGS:Format("\\uE040"), true, shopkeeper.CurrentForm.Species, shopkeeper.CurrentForm.Form, shopkeeper.CurrentForm.Skin, shopkeeper.CurrentForm.Gender)
  UI:SetSpeakerEmotion("Special0")
  UI:WaitShowDialogue("Right behind you, [color=#03f8fc]Ma'am[color]")
  GAME:WaitFrames(60)

  
  UI:SetSpeaker(boss)
  UI:SetSpeakerEmotion("Happy")
  UI:WaitShowDialogue("Very well!")
  UI:WaitShowDialogue("It seems everyone has followed so far!")
  GAME:WaitFrames(60)
  UI:SetSpeakerEmotion("Worried")
  UI:WaitShowDialogue("Hold on...")
  UI:WaitShowDialogue("One,[pause=0] two[pause=0], three...")


  local coro1 = TASK:BranchCoroutine(function() conceal_forest_entrance.Emote(plusle, "exclaim") end)
  local coro2 = TASK:BranchCoroutine(function() conceal_forest_entrance.Emote(boss, "exclaim") end)
  local coro3 = TASK:BranchCoroutine(function() conceal_forest_entrance.Emote(minun, "exclaim") end)
  local coro4 = TASK:BranchCoroutine(function() conceal_forest_entrance.Emote(shopkeeper, "exclaim") end)
  TASK:JoinCoroutines({coro1,coro2,coro3,coro4})
  SOUND:PlaySE('Battle/EVT_Emote_Exclaim_2')
  UI:SetSpeaker(STRINGS:Format("\\uE040"), true, "", -1, "", RogueEssence.Data.Gender.Unknown)
  UI:WaitShowDialogue("WAIT!")

  local coro1 = TASK:BranchCoroutine(function() conceal_forest_entrance.TurnLeft(plusle) end)
  local coro2 = TASK:BranchCoroutine(function() conceal_forest_entrance.TurnLeft(minun) end)
  local coro3 = TASK:BranchCoroutine(function() conceal_forest_entrance.TurnLeft(shopkeeper) end)
  TASK:JoinCoroutines({coro1,coro2,coro3})

  GROUND:MoveInDirection(partner, Direction.Right, 80, true, 4)
  --GROUND:CharWaitAnim(partner, "HitGround")
  local coro1 = TASK:BranchCoroutine(function() conceal_forest_entrance.PlayAnim(partner, "Trip") end)
  local coro2 = TASK:BranchCoroutine(function() conceal_forest_entrance.PlaySound("Battle/DUN_Tackle") end)
  TASK:JoinCoroutines({coro1,coro2})
  
  GAME:WaitFrames(60)
  UI:SetSpeaker(STRINGS:Format("\\uE040"), true, partner.CurrentForm.Species, partner.CurrentForm.Form, partner.CurrentForm.Skin, partner.CurrentForm.Gender)


  GAME:WaitFrames(60)
  GROUND:CharSetDrawEffect(partner, DrawEffect.Trembling)
  GAME:WaitFrames(20)
  GROUND:CharEndDrawEffect(partner, DrawEffect.Trembling)
  GAME:WaitFrames(70)
  UI:SetSpeakerEmotion("Pain")
  UI:WaitShowDialogue("Ow...")

  local coro1 = TASK:BranchCoroutine(function() conceal_forest_entrance.Emote(plusle, "sweatdrop") end)
  local coro2 = TASK:BranchCoroutine(function() conceal_forest_entrance.Emote(boss, "sweatdrop") end)
  local coro3 = TASK:BranchCoroutine(function() conceal_forest_entrance.Emote(minun, "sweatdrop") end)
  local coro4 = TASK:BranchCoroutine(function() conceal_forest_entrance.Emote(shopkeeper, "sweatdrop") end)
  TASK:JoinCoroutines({coro1,coro2,coro3,coro4})
  SOUND:PlaySE("Battle/EVT_Emote_Sweatdrop")

  GAME:WaitFrames(100)
  UI:SetSpeaker(boss)
  UI:SetSpeakerEmotion("Pain")
 
  UI:WaitShowDialogue("That's who we're missing...")
  GAME:WaitFrames(60)
  -- [[

  Hop(plusle, 'None', 10)
  GROUND:CharSetEmote(plusle, "angry", 1)
  SOUND:PlaySE("Battle/EVT_Emote_Complain_2")
  UI:SetSpeaker(STRINGS:Format("\\uE040"), true, plusle.CurrentForm.Species, plusle.CurrentForm.Form, plusle.CurrentForm.Skin, plusle.CurrentForm.Gender)
  UI:SetSpeakerEmotion("Angry")
  UI:WaitShowDialogue("Where were you?")
  UI:WaitShowDialogue("You can't just separate from us after an operation this big!")
  UI:WaitShowDialogue("You know how much stuff we are carrying?")
  GAME:WaitFrames(20)

  GROUND:CharSetAnim(partner, "Wake", false)
  GAME:WaitFrames(60)

  UI:SetSpeaker(STRINGS:Format("\\uE040"), true, partner.CurrentForm.Species, partner.CurrentForm.Form, partner.CurrentForm.Skin, partner.CurrentForm.Gender)
  UI:SetSpeakerEmotion("Sad")
  UI:WaitShowDialogue("Sorry,[pause=40] I got distracted...")

  UI:SetSpeaker(STRINGS:Format("\\uE040"), true, plusle.CurrentForm.Species, plusle.CurrentForm.Form, plusle.CurrentForm.Skin, plusle.CurrentForm.Gender)
  UI:SetSpeakerEmotion("Angry")
  UI:WaitShowDialogue("Yeah, we can see that!")
  GAME:WaitFrames(60)
  UI:SetSpeaker(STRINGS:Format("\\uE040"), true, minun.CurrentForm.Species, minun.CurrentForm.Form, minun.CurrentForm.Skin, minun.CurrentForm.Gender)
  UI:SetSpeakerEmotion("Pain")
  UI:WaitShowDialogue("Y-Yeah. My brother is right. You have to be m-more careful...")


  GAME:WaitFrames(60)
  UI:SetSpeaker(STRINGS:Format("\\uE040"), true, partner.CurrentForm.Species, partner.CurrentForm.Form, partner.CurrentForm.Skin, partner.CurrentForm.Gender)
  UI:SetSpeakerEmotion("Sad")
  UI:WaitShowDialogue("Sorry, [color=#03f8fc]Kiran[color]...[pause=0] And you too [color=#03f8fc]Lucio[color]...")
  GAME:WaitFrames(60)
  UI:SetSpeaker(plusle)
  UI:SetSpeakerEmotion("Determined")
  UI:WaitShowDialogue("...")
  UI:WaitShowDialogue("Yeah, you better be!")
  GAME:WaitFrames(30)
  GROUND:CharSetEmote(minun, "sweatdrop", 1)
  SOUND:PlaySE("Battle/EVT_Emote_Sweatdrop")
  GAME:WaitFrames(60)
  GROUND:EntTurn(minun, Direction.DownLeft)
  GAME:WaitFrames(3)
  GROUND:EntTurn(minun, Direction.Down)
  GAME:WaitFrames(10)
  UI:SetSpeaker(minun)
  UI:SetSpeakerEmotion("Sad")
  UI:WaitShowDialogue("Do you really have to be this harsh on her?")
  UI:WaitShowDialogue("We were begginers someday too, remember?")
  GAME:WaitFrames(60)
  --GROUND:EntTurn(plusle, Direction.DownLeft)
  --GAME:WaitFrames(3)
  GROUND:EntTurn(plusle, Direction.Left)
  GAME:WaitFrames(3)
  GROUND:EntTurn(plusle, Direction.UpLeft)
  GAME:WaitFrames(3)
  GROUND:EntTurn(plusle, Direction.Up)
  GAME:WaitFrames(50)
  GROUND:EntTurn(plusle, Direction.UpLeft)
  GAME:WaitFrames(3)
  GROUND:EntTurn(plusle, Direction.Left)
  GAME:WaitFrames(60)


  UI:SetSpeaker(plusle)
  UI:SetSpeakerEmotion("Determined")
  UI:WaitShowDialogue("...")
  GAME:WaitFrames(60)
  UI:SetSpeaker(STRINGS:Format("\\uE040"), true, "", -1, "", RogueEssence.Data.Gender.Unknown)
  UI:WaitShowDialogue("Hey, shut up![pause=40] I heard something!")

  
  local coro1 = TASK:BranchCoroutine(function() conceal_forest_entrance.Emote(plusle, "exclaim") end)
  local coro2 = TASK:BranchCoroutine(function() conceal_forest_entrance.Emote(boss, "exclaim") end)
  local coro3 = TASK:BranchCoroutine(function() conceal_forest_entrance.Emote(minun, "exclaim") end)
  local coro4 = TASK:BranchCoroutine(function() conceal_forest_entrance.Emote(shopkeeper, "exclaim") end)
  local coro5 = TASK:BranchCoroutine(function() conceal_forest_entrance.Emote(partner, "exclaim") end)
  TASK:JoinCoroutines({coro1,coro2,coro3,coro4,coro5})
  SOUND:PlaySE('Battle/EVT_Emote_Exclaim_2')


  local coro1 = TASK:BranchCoroutine(function() conceal_forest_entrance.TurnLeftAlt(minun) end)
  local coro2 = TASK:BranchCoroutine(function() conceal_forest_entrance.TurnLeft(partner) end)
  TASK:JoinCoroutines({coro1,coro2})



  GAME:WaitFrames(30)
  UI:SetSpeaker(STRINGS:Format("\\uE040"), true, "", -1, "", RogueEssence.Data.Gender.Unknown)
 
  UI:WaitShowDialogue("Yeah, me too!")
  UI:WaitShowDialogue("Do you think those crooks are around here, somewhere?")
  UI:WaitShowDialogue("Of course they are! I can smell them![pause=0] Let's catch them before we lose them!")
  GAME:WaitFrames(80)

  local coro1 = TASK:BranchCoroutine(function() conceal_forest_entrance.Emote(plusle, "shock") end)
  local coro2 = TASK:BranchCoroutine(function() conceal_forest_entrance.Emote(boss, "shock") end)
  local coro3 = TASK:BranchCoroutine(function() conceal_forest_entrance.Emote(minun, "shock") end)
  local coro4 = TASK:BranchCoroutine(function() conceal_forest_entrance.Emote(shopkeeper, "shock") end)
  local coro5 = TASK:BranchCoroutine(function() conceal_forest_entrance.Emote(partner, "shock") end)
  TASK:JoinCoroutines({coro1,coro2,coro3,coro4,coro5})
  SOUND:PlaySE('Battle/EVT_Emote_Shock')
   GAME:WaitFrames(50)

  SOUND:PlayBGM("Growing Anxiety.ogg", true) 
  UI:SetSpeaker(minun)
  UI:SetSpeakerEmotion("Surprised")
  UI:WaitShowDialogue("Oh no![pause=0] They're onto us!")
  GAME:WaitFrames(30)
  UI:SetSpeaker(STRINGS:Format("\\uE040"), true, shopkeeper.CurrentForm.Species, shopkeeper.CurrentForm.Form, shopkeeper.CurrentForm.Skin, shopkeeper.CurrentForm.Gender)
  UI:SetSpeakerEmotion("Surprised")
  UI:WaitShowDialogue("They can't be!")
  UI:SetSpeakerEmotion("Crying")
  GROUND:CharSetDrawEffect(shopkeeper, DrawEffect.Trembling)
  
 
  UI:WaitShowDialogue("I can't lose all the new merchandise I so rightfully stole!")
  UI:WaitShowDialogue("What will my guild think if I come back with nothing for them to sell?")

  GAME:WaitFrames(60)
  UI:SetSpeaker(plusle)
  UI:SetSpeakerEmotion("Angry")
  Hop(plusle, 'None', 10)
  Hop(plusle, 'None', 10)
  GROUND:CharSetEmote(plusle, "angry", 2)
  SOUND:PlaySE("Battle/EVT_Emote_Complain_2")
  UI:WaitShowDialogue("This is all your fault, [color=#fff30a]Sprigatito[color]!")
  UI:WaitShowDialogue("You can't even pick a nickname, and now you led the cops to us!")



  GROUND:EntTurn(partner, Direction.DownLeft)
  GAME:WaitFrames(3)
  GROUND:EntTurn(partner, Direction.Down)
  GAME:WaitFrames(3)
  GROUND:EntTurn(partner, Direction.DownRight)
  GAME:WaitFrames(3)
  GROUND:EntTurn(partner, Direction.Right)
  GAME:WaitFrames(20)
  UI:SetSpeaker(partnerDialogue)
  Hop(partner, 'None', 10)
  Hop(partner, 'None', 10)
  GROUND:CharSetEmote(partner, "angry", 2)
  SOUND:PlaySE("Battle/EVT_Emote_Complain_2")
  UI:SetSpeakerEmotion("Angry")
  UI:WaitShowDialogue("Who are you pointing those fingers at?")
  UI:WaitShowDialogue("I was careful enough to watch if I was being followed or not!")
  
  UI:SetSpeaker(plusle)
  UI:SetSpeakerEmotion("Angry")
  Hop(plusle, 'None', 10)
  Hop(plusle, 'None', 10)
  GROUND:CharSetEmote(plusle, "angry", 2)
  SOUND:PlaySE("Battle/EVT_Emote_Complain_2")
  UI:WaitShowDialogue("Well, clearly not good enough!")

  GAME:WaitFrames(70)
  UI:SetSpeaker(boss)
  UI:SetSpeakerEmotion("Shouting")
  SOUND:FadeOutBGM(80)
  UI:WaitShowDialogue("SILENCE!")
  GAME:WaitFrames(50)
  GROUND:CharEndDrawEffect(shopkeeper, DrawEffect.Trembling)

  local coro1 = TASK:BranchCoroutine(function() conceal_forest_entrance.turnToBoss(plusle) end)
  
  local coro2 = TASK:BranchCoroutine(function() conceal_forest_entrance.turnToBoss(minun) end)
  local coro3 = TASK:BranchCoroutine(function() conceal_forest_entrance.turnToBoss(shopkeeper) end)
  TASK:JoinCoroutines({coro1,coro2,coro3})

  GAME:WaitFrames(80)
  UI:SetSpeakerEmotion("Angry")
  UI:WaitShowDialogue("Fighting won't get us anywhere!")
  UI:WaitShowDialogue("Shut your mouths and listen to me!")


  GAME:WaitFrames(40)
  UI:SetSpeaker(plusle)
  UI:SetSpeakerEmotion("Stunned")
  UI:WaitShowDialogue("O[pause=40]-Okay...")
  UI:SetSpeaker(partnerDialogue)
  UI:SetSpeakerEmotion("Stunned")
  UI:WaitShowDialogue("Sorry...")
  GAME:WaitFrames(60)
  UI:SetSpeaker(boss)
  UI:SetSpeakerEmotion("Sigh")
  UI:WaitShowDialogue("Thank you!")

  GAME:WaitFrames(40)
  UI:SetSpeakerEmotion("Determined")
  UI:WaitShowDialogue("Now listen carefully!")

  SOUND:PlayBGM("Growing Anxiety.ogg", true) 
  UI:WaitShowDialogue("We don't know how many PokÃ©mon are after us, nor do we know their species.")
  UI:WaitShowDialogue("Therefore, following our usual path could potentially lead them to our hiding spot.")

  GAME:WaitFrames(80)
  UI:WaitShowDialogue("That's why,[pause=40] we will head inside a Mystery Dungeon and lose them inside!")
  UI:WaitShowDialogue("The entrance is not too far from the path we usually use, so finding it shouldn't be a problem.")
  UI:WaitShowDialogue("This dungeon is used by a lot of outlaws like us, so expect a lot of traps and dropped objects everywhere.")
  UI:WaitShowDialogue("Any objections?!")
  GAME:WaitFrames(40)
  UI:SetSpeaker('', true, partner.CurrentForm.Species, partner.CurrentForm.Form, partner.CurrentForm.Skin, partner.CurrentForm.Gender)
  UI:SetSpeakerEmotion("Stunned")
  UI:WaitShowDialogue("(A... [pause=70] Mystery Dungeon?!)")

  GAME:WaitFrames(80)
  UI:SetSpeaker(boss)
  UI:SetSpeakerEmotion("Determined")
  UI:WaitShowDialogue("Great!")
  UI:WaitShowDialogue("We will go in pairs. [color=#03f8fc]Kiran[color] and [color=#03f8fc]Lucio[color] will go together, and I'll go with [color=#03f8fc]Jacques[color]!")
  GAME:WaitFrames(40)
  UI:SetSpeaker(shopkeeper)
  UI:SetSpeakerEmotion("Special0")
  UI:WaitShowDialogue("Fine by me!")
  GAME:WaitFrames(40)
  UI:SetSpeaker(plusle)
  UI:SetSpeakerEmotion("Determined")
  UI:WaitShowDialogue("Okay!")
  GAME:WaitFrames(40)
  UI:SetSpeaker(minun)
  UI:SetSpeakerEmotion("Stunned")
  UI:WaitShowDialogue("S-Sure...")
  SOUND:FadeOutBGM(80)
  GAME:WaitFrames(30)

  UI:SetSpeaker(partnerDialogue)
  UI:SetSpeakerEmotion("Surprised")
  UI:WaitShowDialogue("Wait![pause=0] What about me?")


  --Angry boss, add sounds and allat
  UI:SetSpeaker(boss)
  UI:SetSpeakerEmotion("Angry")
  UI:WaitShowDialogue("You'll go in alone!")
  UI:WaitShowDialogue("Take this as your punishment for this whole situation!")

  UI:SetSpeaker(partnerDialogue)
  UI:SetSpeakerEmotion("Surprised")
  UI:WaitShowDialogue("What?!")
  UI:WaitShowDialogue("But what if I get caugh-?")


  Hop(boss, 'None', 10)
  Hop(boss, 'None', 10)
  GROUND:CharSetEmote(boss, "angry", 2)
  SOUND:PlaySE("Battle/EVT_Emote_Complain_2")
  UI:SetSpeaker(boss)
  UI:SetSpeakerEmotion("Angry")
  UI:WaitShowDialogue("That's enough!")
  UI:WaitShowDialogue("Or would you prefer if I left you without dinner as well?")

  GAME:WaitFrames(10)
  UI:SetSpeaker(partnerDialogue)
  UI:SetSpeakerEmotion("Pain")
  GROUND:CharSetEmote(partner, "sweatdrop", 1)
  SOUND:PlaySE("Battle/EVT_Emote_Sweatdrop")
  GAME:WaitFrames(50)
  UI:WaitShowDialogue("O-[pause=60]Okay...")

  
  GAME:WaitFrames(50)
  GROUND:EntTurn(boss, Direction.DownLeft)
  GAME:WaitFrames(5)
  GROUND:EntTurn(boss, Direction.Down)
  GAME:WaitFrames(5)
  GROUND:EntTurn(boss, Direction.DownRight)
  GAME:WaitFrames(5)
  GROUND:EntTurn(boss, Direction.Right)
  GAME:WaitFrames(60)
  UI:SetSpeaker(boss)
  UI:SetSpeakerEmotion("Determined")
  UI:WaitShowDialogue("[color=#03f8fc]Jacques[color], let's move.")
  GROUND:MoveInDirection(boss, Direction.Right, 130, false, 1.8)
  GROUND:Hide('Boss')

  GAME:WaitFrames(60)
  UI:SetSpeaker(shopkeeper)
  UI:SetSpeakerEmotion("Special0")
  UI:WaitShowDialogue("Good luck!")

  local coro1 = TASK:BranchCoroutine(function() conceal_forest_entrance.turn(minun, "up") end)
  local coro2 = TASK:BranchCoroutine(function() conceal_forest_entrance.turn(plusle, "down") end)
  TASK:JoinCoroutines({coro1,coro2})

  local coro1 = TASK:BranchCoroutine(function() conceal_forest_entrance.lastWalkFunctionISwear(plusle, "down") end)
  local coro2 = TASK:BranchCoroutine(function() conceal_forest_entrance.lastWalkFunctionISwear(shopkeeper, 'straight') end)
  local coro3 = TASK:BranchCoroutine(function() conceal_forest_entrance.lastWalkFunctionISwear(minun, 'up') end)
  TASK:JoinCoroutines({coro1,coro2,coro3})

  --GROUND:MoveInDirection(shopkeeper, Direction.Right, 120, false, 1.8)

  GAME:WaitFrames(60)
  GROUND:EntTurn(plusle, Direction.UpRight)
  GAME:WaitFrames(7)
  GROUND:EntTurn(plusle, Direction.Up)

  GAME:WaitFrames(10)
  UI:SetSpeaker(plusle)
  UI:SetSpeakerEmotion("Determined")
  UI:WaitShowDialogue("Let's go, bro.")
  UI:WaitShowDialogue("We can't lose anymore time.")
  GAME:WaitFrames(10)
  GROUND:EntTurn(minun, Direction.DownRight)
  GAME:WaitFrames(7)
  GROUND:EntTurn(minun, Direction.Down)

  UI:SetSpeaker(minun)
  UI:SetSpeakerEmotion("Sad")
  UI:WaitShowDialogue("Right behind you...")


  local coro1 = TASK:BranchCoroutine(function() conceal_forest_entrance.lastWalkFunctionISwear(plusle, "enterPlus") end)
  local coro2 = TASK:BranchCoroutine(function() conceal_forest_entrance.lastWalkFunctionISwear(minun, 'enterMin') end)
  TASK:JoinCoroutines({coro1,coro2})
  GAME:WaitFrames(60)
  GROUND:EntTurn(minun, Direction.DownRight)
  GAME:WaitFrames(5)
  GROUND:EntTurn(minun, Direction.Down)
  GAME:WaitFrames(5)
  GROUND:EntTurn(minun, Direction.DownLeft)
  GAME:WaitFrames(5)
  GROUND:EntTurn(minun, Direction.Left)
  GAME:WaitFrames(40)

  UI:SetSpeaker(minun)
  UI:SetSpeakerEmotion("Sad")
  UI:WaitShowDialogue("Sorry about my brother.")
  UI:WaitShowDialogue("He's just a bit nervous about his first field mission")

  GAME:WaitFrames(50)
  UI:SetSpeaker(partnerDialogue)
  UI:SetSpeakerEmotion("Sigh")
  UI:WaitShowDialogue("Yeah, I could tell.")

  GAME:WaitFrames(60)
  UI:SetSpeaker(minun)
  UI:SetSpeakerEmotion("Happy")
  UI:WaitShowDialogue("Good luck, [color=#fff30a]Sprigatito[color]")

  UI:SetSpeaker(partnerDialogue)
  UI:SetSpeakerEmotion("Happy")
  UI:WaitShowDialogue("Thanks, [color=#03f8fc]Lucio[color]. Good luck to you too!")
  GAME:WaitFrames(20)
  
  GROUND:EntTurn(minun, Direction.DownLeft)
  GAME:WaitFrames(5)
  GROUND:EntTurn(minun, Direction.Down)
  GAME:WaitFrames(5)
  GROUND:EntTurn(minun, Direction.DownRight)
  GAME:WaitFrames(5)
  GROUND:EntTurn(minun, Direction.Right)
  GAME:WaitFrames(60)

  UI:SetSpeaker(minun)
  UI:SetSpeakerEmotion("Determined")
  UI:WaitShowDialogue("I better see you on the other side!")
  GAME:WaitFrames(40)
  UI:SetSpeaker(partnerDialogue)
  UI:SetSpeakerEmotion("Determined")
  UI:WaitShowDialogue("Oh, you bet!")


  GAME:WaitFrames(80)
  GROUND:MoveInDirection(minun, Direction.Right, 120, false, 1.8)
  GROUND:Hide('Team Overcharge Minun')


  GAME:WaitFrames(100)
  UI:SetSpeaker(partnerDialogue)
  UI:SetSpeakerEmotion("Pain")
  UI:WaitShowDialogue("Alright, it's my turn now...")
  GAME:FadeOut(false, 60)
  --GAME:WaitFrames(80)
  UI:ResetSpeaker()
  
  UI:WaitShowDialogue("I won't fail them!")
  GROUND:Hide('Partner')
  SOUND:PlayBGM("B26. Ambush Forest.ogg", true) 
  GAME:MoveCamera(0, 0, 1, true)




  --Pick a partner nickname that's not "Sprigatito"
  --Gotta do it still :skull:
  --[[
                                This is for the partner
  local yesnoResult = false 
	while not yesnoResult do
		UI:NameMenu("What is your partner's name?", "It is highly recommended to give a nickname.", 60)
		UI:WaitForChoice()
		result = UI:ChoiceResult()
		--if no name given, set name to species name
		if result == "" then result = _DATA:GetMonster(GAME:GetPlayerPartyMember(1).CurrentForm.Species).Name:ToLocal() end
		UI:ChoiceMenuYesNo("Is [color=#FFFF00]" .. result .. "[color] correct?")
		UI:WaitForChoice()
		yesnoResult = UI:ChoiceResult()
	end


  ]]




  GAME:WaitFrames(60)
  GROUND:TeleportTo(player, 578, 143, Direction.Right)
  GAME:CutsceneMode(false)
  GAME:FadeIn(20)
  SV.conceal_forest_entrance.first_cutscene = true

end
function conceal_forest_entrance.EastExit_1_Touch(obj, activator)


  if SV.conceal_forest_entrance.found_player == false then
    GAME:CutsceneMode(true)
    UI:SetSpeaker(activator)
    UI:SetSpeakerEmotion("Worried")
    UI:ChoiceMenuYesNo("Am I really ready to go in?")
    UI:WaitForChoice()
    go = UI:ChoiceResult()
    if go == false then
      UI:SetSpeaker(activator)
      UI:SetSpeakerEmotion("Pain")
      UI:WaitShowDialogue("Come on, [color=#fff30a]Sprigatito[color]...")
      UI:WaitShowDialogue("Cops are just behind you! You can't just keep doubting yourself!")
      GAME:CutsceneMode(false)
    elseif go == true then
      UI:SetSpeaker(activator)
      UI:SetSpeakerEmotion("Pain")
      UI:WaitShowDialogue("Alright, I've heard enough about Mystery Dungeons to know what to expect.")
      UI:WaitShowDialogue("You've fought claw-on-claw against cops.")
      UI:WaitShowDialogue("You can't let some ferals get you down!")
      GAME:WaitFrames(60)
      UI:SetSpeakerEmotion("Determined")
      UI:WaitShowDialogue("Let's go!")
      GROUND:MoveInDirection(player, Direction.Right, 70, false, 1.8)
      GAME:FadeOut(false, 60)
      GAME:EnterDungeon('conceal_forest', 0, 0, 0, RogueEssence.Data.GameProgress.DungeonStakes.Risk, true, true)
	 
      --GAME:CutsceneMode(false)
      GAME:CutsceneMode(false)
    end
  elseif SV.conceal_forest_entrance.found_player == true then
    GAME:FadeOut(false, 20)
    SV.partner.entrance = 2 
    GAME:EnterZone('conceal_forest', -1, 2, 3)


  end
end





function conceal_forest_entrance.Walk_Sequence(character)
  GROUND:MoveInDirection(character, Direction.Right, 325, false, 1.8)
  --GROUND:CharAnimateTurn(character, Direction.Right, 4)
end
function conceal_forest_entrance.Emote(character, emote)
  GROUND:CharSetEmote(character, emote, 1)

end



function conceal_forest_entrance.Signpost_Action(obj, activator)
  --GAME:SetCharacterNickname(player, "[color=#fff30a]Sprigatito[color]")
  GAME:CutsceneMode(true)
  local player = CH('PLAYER')
  local partner = CH('Teammate1')
  GROUND:CharTurnToChar(partner, player)

  UI:ResetSpeaker()
  UI:WaitShowDialogue("<---: [color=#fcacac]Twilight Town[color].\n--->: Definitely not a sekret hideout.")
  GROUND:CharSetEmote(activator, "sweatdrop", 1)
  SOUND:PlaySE("Battle/EVT_Emote_Sweatdrop")
  GAME:WaitFrames(90)
  UI:SetSpeaker(activator)
 
  if SV.conceal_forest_entrance.found_player == false then
    UI:SetSpeakerEmotion("Worried")
    UI:WaitShowDialogue("This signpost is gonna get us caught someday...")
  elseif SV.conceal_forest_entrance.found_player == true then
    UI:SetSpeakerEmotion("Special3")
    UI:WaitShowDialogue("What kind of secrecy is this?")
    GAME:WaitFrames(60)
    UI:SetSpeaker(partner) 
    UI:SetSpeakerEmotion("Worried")
    UI:WaitShowDialogue("Would you believe me if I told you I wonder the exact same?")
  end
  GAME:CutsceneMode(false)
end


function conceal_forest_entrance.lastWalkFunctionISwear(character, dir)
  if dir == 'up' then
    GROUND:MoveInDirection(character, Direction.Up, 10, false, 1)
    GROUND:EntTurn(character, Direction.UpLeft)
    GAME:WaitFrames(3)
    GROUND:EntTurn(character, Direction.Left)
    GAME:WaitFrames(3)
    GROUND:EntTurn(character, Direction.DownLeft)
    GAME:WaitFrames(3)
    GROUND:EntTurn(character, Direction.Down)

    GAME:WaitFrames(30)
    GROUND:EntTurn(character, Direction.DownRight)
    GAME:WaitFrames(3)
    GROUND:EntTurn(character, Direction.Right)

  elseif dir == 'down' then
    GROUND:MoveInDirection(character, Direction.Down, 10, false, 1)
    GROUND:EntTurn(character, Direction.DownLeft)
    GAME:WaitFrames(3)
    GROUND:EntTurn(character, Direction.Left)
    GAME:WaitFrames(3)
    GROUND:EntTurn(character, Direction.UpLeft)
    GAME:WaitFrames(3)
    GROUND:EntTurn(character, Direction.Up)

    GAME:WaitFrames(30)
    GROUND:EntTurn(character, Direction.UpRight)
    GAME:WaitFrames(3)
    GROUND:EntTurn(character, Direction.Right)


  elseif dir == 'straight' then
    GROUND:MoveInDirection(character, Direction.Right, 240, false, 1.8)
    GROUND:Hide('Shopkeeper')
  elseif dir == 'enterPlus' then
    GROUND:MoveInDirection(character, Direction.Up, 10, false, 1)
    GROUND:MoveInDirection(character, Direction.Right, 280, false, 1.8)
    GROUND:Hide('Team Overcharge Plusle')
  elseif dir == 'enterMin' then
    GAME:WaitFrames(25)
    GROUND:MoveInDirection(character, Direction.Down, 10, false, 1)
    GROUND:MoveInDirection(character, Direction.Right, 80, false, 1.8)




  end


end

function conceal_forest_entrance.turn(character, direction)
  if direction == "up" then
    GROUND:EntTurn(character, Direction.UpLeft)
    GAME:WaitFrames(3)
    GROUND:EntTurn(character, Direction.Up)
   

  elseif direction == "down" then
    GROUND:EntTurn(character, Direction.DownLeft)
    GAME:WaitFrames(3)
    GROUND:EntTurn(character, Direction.Down)
  
     

  end


end






function conceal_forest_entrance.turnToBoss(character)
  GROUND:EntTurn(character, Direction.DownLeft)
  GAME:WaitFrames(3)
  GROUND:EntTurn(character, Direction.Down)
  GAME:WaitFrames(3)
  GROUND:EntTurn(character, Direction.DownRight)
  GAME:WaitFrames(3)
  GROUND:EntTurn(character, Direction.Right)


end



function conceal_forest_entrance.TurnLeft(character)
  GROUND:EntTurn(character, Direction.DownRight)
  GAME:WaitFrames(3)
  GROUND:EntTurn(character, Direction.Down)
  GAME:WaitFrames(3)
  GROUND:EntTurn(character, Direction.DownLeft)
  GAME:WaitFrames(3)
  GROUND:EntTurn(character, Direction.Left)


end
function conceal_forest_entrance.TurnLeftAlt(character)
  GROUND:EntTurn(character, Direction.UpLeft)
  GAME:WaitFrames(3)
  GROUND:EntTurn(character, Direction.Left)
 


end
function conceal_forest_entrance.PlayAnim(character, anim)
  GROUND:CharSetAction(character, RogueEssence.Ground.PoseGroundAction(character.Position, character.Direction, RogueEssence.Content.GraphicsManager.GetAnimIndex(anim)))


end
function conceal_forest_entrance.PlaySound(sound)
  GAME:WaitFrames(3)
  SOUND:PlaySE(sound)
end

function conceal_forest_entrance.West_Exit_Touch(obj, activator)
  --local player = CH('PLAYER')
  GAME:CutsceneMode(true)
  if SV.conceal_forest_entrance.found_player == false then
    GROUND:CharSetEmote(activator, "exclaim", 1)
    SOUND:PlaySE('Battle/EVT_Emote_Exclaim_2')
    UI:SetSpeaker(STRINGS:Format("\\uE040"), true, "", -1, "", RogueEssence.Data.Gender.Unknown)
    UI:WaitShowDialogue("Come on, move it")
    UI:WaitShowDialogue("The more we take to go, the more distance they will flee!")
    GAME:WaitFrames(80)
    UI:SetSpeaker(activator)
    UI:SetSpeakerEmotion("Worried")
    UI:WaitShowDialogue("I'm usually one to try new things, but...")
    UI:SetSpeakerEmotion("Pain")
    UI:WaitShowDialogue("I really doubt turning myself in to the cops will do me any good...")
    UI:SetSpeakerEmotion("Normal")
    UI:WaitShowDialogue("I have to go inside the dungeon,[pause=40] just to the other side!")


  elseif SV.conceal_forest_entrance.found_player == true then
    

    GAME:FadeOut(false, 20)
    SV.partner.entrance = 0
    GAME:EnterZone('twilight_town', -1, 0, 0)


  end

  GAME:CutsceneMode(false)
end
--Engine callback function
function conceal_forest_entrance.Exit(map)


end


--Engine callback function
function conceal_forest_entrance.Update(map)


end


--Engine callback function
function conceal_forest_entrance.GameSave(map)
  if SV.conceal_forest_entrance.found_player then
    local partner = CH('Teammate1')
    SV.partner.positionX = partner.Position.X
    SV.partner.positionY = partner.Position.Y
    SV.partner.direction = DirToNum(partner.Direction)



  end

end


--Engine callback function
function conceal_forest_entrance.GameLoad(map)
  if SV.conceal_forest_entrance.found_player then
    local partner = CH('Teammate1')
    SV.partner.positionX = partner.Position.X
    SV.partner.positionY = partner.Position.Y
    SV.partner.direction = DirToNum(partner.Direction)
  else
    SOUND:PlayBGM("B26. Ambush Forest.ogg", true) 

  end
  GAME:FadeIn(20)

end
function DirToNum(dir)
	--up is 0, upright is 1, ... up left is 7
	local num = -1
	if dir == Direction.Up then
		num = 0
	elseif dir == Direction.UpRight then
		num = 1
	elseif dir == Direction.Right then
		num = 2
	elseif dir == Direction.DownRight then
		num = 3
	elseif dir == Direction.Down then
		num = 4
	elseif dir == Direction.DownLeft then
		num = 5
	elseif dir == Direction.Left then
		num = 6
	elseif dir == Direction.UpLeft then
		num = 7
	end
	
	return num
	
end
--converts a number to a direction
function NumToDir(num)
	local dir = Direction.None
	if num % 8 == 0 then 
		dir = Direction.Up
	elseif num % 8 == 1 then
		dir = Direction.UpRight
	elseif num % 8 == 2 then
		dir = Direction.Right
	elseif num % 8 == 3 then
		dir = Direction.DownRight
	elseif num % 8 == 4 then
		dir = Direction.Down
	elseif num % 8 == 5 then
		dir = Direction.DownLeft
	elseif num % 8 == 6 then
		dir = Direction.Left
	elseif num % 8 == 7 then
		dir = Direction.UpLeft
	end

	return dir
end 
-------------------------------
-- Entities Callbacks
-------------------------------


return conceal_forest_entrance

