--[[
    init.lua
    Created: 03/18/2024 15:41:42
    Description: Autogenerated script file for the map job_boards.
]]--
-- Commonly included lua functions and data
require 'common'
require 'ground.job_boards.job_boards_ch2'
-- Package name
local job_boards = {}

-- Local, localized strings table
-- Use this to display the named strings you added in the strings files for the map!
-- Ex:
--      local localizedstring = MapStrings['SomeStringName']
local MapStrings = {}

-------------------------------
-- Map Callbacks
-------------------------------
---job_boards.Init(map)
--Engine callback function
function job_boards.Init(map)

  --This will fill the localized strings table automatically based on the locale the game is 
  -- currently in. You can use the MapStrings table after this line!
  MapStrings = COMMON.AutoLoadLocalizedStrings()
  COMMON.RespawnAllies()
  local partners = CH('Teammate1')
  AI:SetCharacterAI(partners, "ai.ground_partner", CH('PLAYER'), partners.Position)
  AI:EnableCharacterAI(partners)
  partners.CollisionDisabled = true
	if not SV.guildmasters_office.officially_joined or SV.meeting_done then
		GROUND:Hide("Ma'am")
		GROUND:Hide("Eve")
		GROUND:Hide("Lily")
		GROUND:Hide("Kit")
		GROUND:Hide("Lilith")
		GROUND:Hide("Celia")
		GROUND:Hide("Dex")
		local mrkrKiran = MRKR("kiran_mrkr")
    	local mrkrLucio = MRKR("lucio_mrkr")
		local kiran = CH('Kiran')
		local lucio = CH('Lucio')

		GROUND:TeleportTo(kiran, mrkrKiran.Position.X, mrkrKiran.Position.Y, mrkrKiran.Direction)
		GROUND:TeleportTo(lucio, mrkrLucio.Position.X, mrkrLucio.Position.Y, mrkrLucio.Direction)
	end
	if not SV.guildmasters_office.officially_joined then
		GROUND:Hide('Kiran')
		GROUND:Hide('Lucio')


	end
  if not SV.guildmasters_office.lets_explore_cut then
    letsExplore()

  elseif SV.guildmasters_office.lets_explore_cut then
	if SV.progression.chapter == 2 then
	if not SV.meeting_done then
		if not SV.first_meeting_done then --do the first ever meeting.
			AI:DisableCharacterAI(partners)
			
			job_boards_ch2.firstMeeting()

		else --regular meeting
			--I'll do it later.


		end

	end
	end
  end




end

---job_boards.Enter(map)
--Engine callback function

function job_boards.Enter(map)
	local partners = CH('Teammate1')
	AI:DisableCharacterAI(partners)

	

	if SV.partner.entrance == 0 then
		--Do nothing, as the partner already spawns up.
	elseif SV.partner.entrance == 1 then
		local marker = MRKR('partner_mrkr_1')
		GROUND:TeleportTo(partners, marker.Position.X, marker.Position.Y, marker.Direction)
	elseif SV.partner.entrance == 2 then
		local marker = MRKR('mrkr_2_partner')
		if not SV.meeting_done then
			GROUND:TeleportTo(partners, marker.Position.X, marker.Position.Y, marker.Direction)
	
		end
	end
	AI:SetCharacterAI(partners, "ai.ground_partner", CH('PLAYER'), partners.Position)
	AI:EnableCharacterAI(partners)
	partners.CollisionDisabled = true
	
	if SV.meeting_done then
		local kiran = CH('Kiran')
		local lucio = CH('Lucio')
		
		


	end



  GAME:FadeIn(20)

end 

---job_boards.Exit(map)
--Engine callback function
function job_boards.Exit(map)


end
function letsExplore()
  local player = CH('PLAYER')
  local partner = CH('Teammate1')
  GAME:CutsceneMode(true)
  GAME:WaitFrames(20)
	GAME:FadeIn(20)
  GROUND:CharTurnToCharAnimated(partner, player, 5)
  GROUND:CharTurnToCharAnimated(player, partner, 5)
  GAME:WaitFrames(50)
  Dialogue(partner, "Normal", "Alright " .. player:GetDisplayName()..", let's start with this room.")
  Dialogue(partner, "Normal", "This is where the board with missions for us are located.")
  Dialogue(partner, "Normal", "It's also the meeting place in the mornings for us all.")

  GAME:WaitFrames(50)

  Dialogue(player, "Worried", "What does that mean?")
  GAME:WaitFrames(60)

  Dialogue(partner, "Worried", "You shouldn't worry too much about it for now.")
  Dialogue(partner, "Normal", "Let's focus on getting you too see all the place for now.")


  GAME:CutsceneMode(false)
  SV.guildmasters_office.lets_explore_cut = true


end
function job_boards.Stuff_Action(obj, activator)
	GAME:CutsceneMode(true)

	local player = CH('PLAYER')

	UI:ResetSpeaker()
	UI:WaitShowDialogue("Different mission papers are laying on the table.")
	UI:SetSpeaker('', true, player.CurrentForm.Species, player.CurrentForm.Form, player.CurrentForm.Skin, player.CurrentForm.Gender)
	UI:SetSpeakerEmotion('Worried')
	UI:WaitShowDialogue("(Someone must have left them there in a hurry...)")
	GAME:CutsceneMode(false)


end
function job_boards.Teammate1_Action(obj, activator)
	GAME:CutsceneMode(true)

	if not SV.guildmasters_office.officially_joined then
	
		GROUND:CharTurnToCharAnimated(obj, activator, 5)
		GROUND:CharTurnToCharAnimated(activator, obj, 5)
		Dialogue(obj, "Normal", "This is where the board with missions for us are located.")
		Dialogue(obj, "Normal", "It's also the meeting place in the mornings for us all.")
		Dialogue(obj, "Worried", "But you shouldn't worry too much about it for now.")
		Dialogue(obj, "Normal", "Let's focus on getting you too see all the place.")
	end

	GAME:CutsceneMode(false)

end
function job_boards.Entrance_up_0_Touch(obj, activator)
	local player = CH('PLAYER')
  local partner = CH('Teammate1')
	if not SV.guildmasters_office.officially_joined then
		GAME:CutsceneMode(true)
		GROUND:CharTurnToCharAnimated(partner, player, 5)
		Dialogue(partner, "Normal", player:GetDisplayName().."!")

	
		GROUND:CharTurnToCharAnimated(player, partner, 5)

		GAME:WaitFrames(60)

		Dialogue(partner, "Worried", "We shouldn't bother [color=#03f8fc]Ma'am[color] anymore today.")
		Dialogue(partner, "Normal", "Let's go somewhere else and look around.")
		GAME:CutsceneMode(false)


	else
		GAME:FadeOut(false, 20)
		
		GAME:EnterZone('thieves_hideout', -1, 5, 0)
		SOUND:PlayBGM("Wigglytuff's Guild.ogg", true) 

	end


end
function job_boards.exit_down_Touch(obj, activator)
	GAME:FadeOut(false, 20)
	SV.partner.entrance = 0
	GAME:EnterZone('thieves_hideout', -1, 7, 0)
   


end
function job_boards.exit_right_Touch(obj, activator)
	GAME:FadeOut(false, 20)
	SV.partner.entrance = 0
	GAME:EnterZone('thieves_hideout', -1, 11, 0)

end
function Dialogue(sp, emote, txt)
  UI:SetSpeaker(sp)
  UI:SetSpeakerEmotion(emote)
  UI:WaitShowDialogue(txt)


end
---job_boards.Update(map)
--Engine callback function
function job_boards.Update(map)


end

---job_boards.GameSave(map)
--Engine callback function
function job_boards.GameSave(map)

  local partner = CH('Teammate1')
  SV.partner.positionX = partner.Position.X
	SV.partner.positionY = partner.Position.Y
	SV.partner.direction = DirToNum(partner.Direction)
end

---job_boards.GameLoad(map)
--Engine callback function
function job_boards.GameLoad(map)
  local partners = CH('Teammate1')
  GROUND:TeleportTo(partners, SV.partner.positionX, SV.partner.positionY, NumToDir(SV.partner.direction))
  

	AI:SetCharacterAI(partners, "ai.ground_partner", CH('PLAYER'), partners.Position)
  AI:EnableCharacterAI(partners)
  partners.CollisionDisabled = true
  GAME:FadeIn(20)

end
function DirToNum(dir)
	--up is 0, upright is 1, ... up left is 7
	local num = -1
	if dir == Direction.Up then
		num = 0
	elseif dir == Direction.UpRight then
		num = 1
	elseif dir == Direction.Right then
		num = 2
	elseif dir == Direction.DownRight then
		num = 3
	elseif dir == Direction.Down then
		num = 4
	elseif dir == Direction.DownLeft then
		num = 5
	elseif dir == Direction.Left then
		num = 6
	elseif dir == Direction.UpLeft then
		num = 7
	end
	
	return num
	
end
--converts a number to a direction
function NumToDir(num)
	local dir = Direction.None
	if num % 8 == 0 then 
		dir = Direction.Up
	elseif num % 8 == 1 then
		dir = Direction.UpRight
	elseif num % 8 == 2 then
		dir = Direction.Right
	elseif num % 8 == 3 then
		dir = Direction.DownRight
	elseif num % 8 == 4 then
		dir = Direction.Down
	elseif num % 8 == 5 then
		dir = Direction.DownLeft
	elseif num % 8 == 6 then
		dir = Direction.Left
	elseif num % 8 == 7 then
		dir = Direction.UpLeft
	end

	return dir
end 
-------------------------------
-- Entities Callbacks
-------------------------------
function job_boards.Board2_Action(obj, activator)
	GAME:CutsceneMode(true)

	if not SV.guildmasters_office.officially_joined then

		local partner = CH('Teammate1')
		local player = CH('PLAYER')
		GROUND:CharTurnToChar(partner, player)

		Dialogue(partner, "Normal", player:GetDisplayName().."!")
		GROUND:CharTurnToCharAnimated(player, partner, 4)


		Dialogue(partner, "Normal", "That is the request board,[pause=30] where us members take missions.")
		Dialogue(partner, "Worried", "You shouldn't look at them too much today.")
		Dialogue(partner, "Normal", "Let's go look somewhere else.[pause=0] I'm sure [color=#00ffff]Ma'am[color] will explain to you tomorrow.")





	elseif not SV.progression.first_day_done then
		local partner = CH('Teammate1')
		local player = CH('PLAYER')
		GROUND:CharTurnToChar(partner, player)

		Dialogue(partner, "Normal", player:GetDisplayName().."!")
		GROUND:CharTurnToCharAnimated(player, partner, 4)


		Dialogue(partner, "Worried", "We don't need to look at the requests in the board today.")
		Dialogue(partner, "Normal", "Let's go prepare ourselves for the mission.")



		


	end
	GAME:CutsceneMode(false)

end
function job_boards.Kiran_Action(obj, activator)
	GAME:CutsceneMode(true)

	if SV.progression.chapter == 2 and not SV.progression.first_day_done then
		

		GROUND:CharTurnToChar(obj, activator)
		Dialogue(obj, "Happy", "Hi, " .. activator:GetDisplayName().."!")
		Dialogue(obj, "Normal", "We are just looking for an easy request to do today!")
		GROUND:EntTurn(obj, Direction.Up)
		
		
		
		



	end
	GAME:CutsceneMode(false)

end
function job_boards.Lucio_Action(obj, activator)
	GAME:CutsceneMode(true)

	if SV.progression.chapter == 2 and not SV.progression.first_day_done then
		GROUND:CharTurnToChar(obj, activator)
		Dialogue(obj, "Happy", "Good luck on your mission, team ".. GAME:GetTeamName().."!")
		Dialogue(obj, "Happy", "I'll be cheering for you!")

		GROUND:EntTurn(obj, Direction.UpLeft)
		

	end
	GAME:CutsceneMode(false)

end
return job_boards

