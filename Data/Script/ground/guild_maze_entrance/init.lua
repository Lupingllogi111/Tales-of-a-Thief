--[[
    init.lua
    Created: 01/23/2024 19:21:21
    Description: Autogenerated script file for the map guild_maze_entrance.
]]--
-- Commonly included lua functions and data
require 'common'

-- Package name
local guild_maze_entrance = {}

-- Local, localized strings table
-- Use this to display the named strings you added in the strings files for the map!
-- Ex:
--      local localizedstring = MapStrings['SomeStringName']
local MapStrings = {}

-------------------------------
-- Map Callbacks
-------------------------------
---guild_maze_entrance.Init(map)
--Engine callback function
function guild_maze_entrance.Init(map)

  --This will fill the localized strings table automatically based on the locale the game is 
  -- currently in. You can use the MapStrings table after this line!
  MapStrings = COMMON.AutoLoadLocalizedStrings()
  GROUND:AddMapStatus("clouds_overhead")
  COMMON.RespawnAllies()
  
  local partner = CH('Teammate1')
  AI:SetCharacterAI(partner, "ai.ground_partner", CH('PLAYER'), partner.Position)
	AI:EnableCharacterAI(partner)
  partner.CollisionDisabled = true
end


---guild_maze_entrance.Enter(map)
--Engine callback function
function guild_maze_entrance.Enter(map)
local partner = CH('Teammate1')
 
  if SV.guild_maze_entrance.intro == false then
    
    introCutscene()
  elseif SV.guild_maze_entrance.intro == true then
    GROUND:Hide('Boss')
  
   
  
    if SV.guild_maze_clearing.test_done == false then
      
 
      fainted() --Fainted inside the dungeon, plays cutscene

    elseif SV.guild_maze_clearing.test_done == true then
      AI:DisableCharacterAI(partner)
      local marker = MRKR('partner_')
      GROUND:TeleportTo(partner, marker.Position.X, marker.Position.Y, marker.Direction)

      AI:SetCharacterAI(partner, 'ai.ground_partner', CH('PLAYER'), partner.Position)
      AI:EnableCharacterAI(partner)
    
      partner.CollisionDisabled = true


      GAME:FadeIn(20)

     
    end

  end

 

end
function fainted()
  GAME:CutsceneMode(true)
  
  local player = CH('PLAYER')
  local partner = CH('Teammate1')
  AI:DisableCharacterAI(partner)
  GROUND:TeleportTo(partner, 188, 49, Direction.Left)
  GROUND:EntTurn(player, Direction.Right)
  GROUND:EntTurn(partner, Direction.Left)
  

  GROUND:CharSetAction(player, RogueEssence.Ground.PoseGroundAction(player.Position, player.Direction, RogueEssence.Content.GraphicsManager.GetAnimIndex("Laying")))
  GROUND:CharSetAction(partner, RogueEssence.Ground.PoseGroundAction(player.Position, player.Direction, RogueEssence.Content.GraphicsManager.GetAnimIndex("Laying")))

  

  GROUND:TeleportTo(partner, 188, 49, Direction.Left)

  GAME:FadeIn(60)


  GAME:WaitFrames(90)

  GROUND:CharSetDrawEffect(player, DrawEffect.Trembling)
  GAME:WaitFrames(5)
  GROUND:CharSetDrawEffect(partner, DrawEffect.Trembling)
  GAME:WaitFrames(15)
  GROUND:CharEndDrawEffect(player, DrawEffect.Trembling)
  GAME:WaitFrames(5)
  GROUND:CharEndDrawEffect(partner, DrawEffect.Trembling)

  GAME:WaitFrames(90)
  UI:SetSpeaker(partner)
  UI:SetSpeakerEmotion("Pain")
  UI:WaitShowDialogue("Ugh...")
  UI:WaitShowDialogue("That was way harder than I thought...")

  UI:SetSpeaker(player)
  UI:SetSpeakerEmotion("Pain")
  UI:WaitShowDialogue("A lot harder, you mean?")
  GAME:WaitFrames(60)

  GROUND:CharSetAnim(partner, "Wake", false)
  GROUND:CharSetAnim(player, "Wake", false)

  GAME:WaitFrames(80)
  UI:SetSpeaker(partner)
  UI:SetSpeakerEmotion("Determined")
  UI:WaitShowDialogue("Doesn't matter!")
  UI:WaitShowDialogue("We have enough time to try again!")
  UI:WaitShowDialogue("Let's go!")
  UI:WaitShowDialogue("We can't give up this easily!")
  SOUND:PlayBGM("B06. Bramble Woods.ogg", true) 
 -- GAME:EndDungeonRun(RogueEssence.Data.GameProgress.ResultType.Downed, "thieves_hideout", -1, 2, 2, false, false)
  

  
  AI:SetCharacterAI(partner, "ai.ground_partner", CH('PLAYER'), partner.Position)
	AI:EnableCharacterAI(partner)
  partner.CollisionDisabled = true
  GAME:CutsceneMode(false)

end
function move(char, x, y, speed)
  GROUND:MoveToPosition(char, x, y, false, speed)


end
function guild_maze_entrance.Dungeon_entrance_Touch(obj, activator)
  UI:ResetSpeaker()
  local player = CH('PLAYER')
  local partner = CH('Teammate1')
  GAME:CutsceneMode(true)
  
    UI:WaitShowDialogue("The forest seems to darken up ahead.")
    UI:ChoiceMenuYesNo("Are you ready to go in?")
    UI:WaitForChoice()
    go = UI:ChoiceResult()
    if go == false then
      --Do nothing and end the textbox, I think
    elseif go == true then

      --local coro1 = TASK:BranchCoroutine(function() guild_maze_entrance.Move(minun) end)
    
      --local coro2 = TASK:BranchCoroutine(function() guild_maze_entrance.Move(shopkeeper) end)
    if SV.guild_maze_clearing.test_done == false then
      AI:DisableCharacterAI(partner)
      local coro1 = TASK:BranchCoroutine(function() move(player, 144, 31, 1.5) end)
      local coro2 = TASK:BranchCoroutine(function() move(partner, 180, 31, 1.5) end)

    
      TASK:JoinCoroutines({coro1,coro2})
    
      GROUND:CharTurnToChar(player, partner)
      GROUND:CharTurnToChar(partner, player)
      if SV.guild_maze_entrance.first_entry_done == false then
        UI:SetSpeaker(partner)
        UI:SetSpeakerEmotion("Determined")
        UI:WaitShowDialogue("Alright, " .. player:GetDisplayName() .. ".")
        UI:WaitShowDialogue("Are you ready?")
        UI:SetSpeaker(player)
        UI:SetSpeakerEmotion("Determined")
        UI:WaitShowDialogue("Ready as ever!")
	      GAME:WaitFrames(40)
    
        UI:SetSpeaker(partner)
        UI:SetSpeakerEmotion("Happy")
        UI:WaitShowDialogue("Perfect!")
        GAME:WaitFrames(90)
        UI:SetSpeakerEmotion("Determined")

        UI:WaitShowDialogue("I'll be right behind you!")

        GAME:FadeOut(false, 30)

       

        SV.guild_maze_entrance.first_entry_done = true

      elseif SV.guild_maze_entrance.first_entry_done == true then
        UI:SetSpeaker(partner)
        UI:SetSpeakerEmotion("Determined")
        UI:WaitShowDialogue("Alright, " .. player:GetDisplayName() .. ".")
        UI:WaitShowDialogue("We may have been knocked out, but we will get it this time!")
        UI:WaitShowDialogue("Are you ready?")

        UI:SetSpeaker(player)
        UI:SetSpeakerEmotion("Determined")
        UI:WaitShowDialogue("Let's get this done with!")
	     
        GAME:FadeOut(false, 30)
        GAME:EnterDungeon('thieves_hideout', 0, 0, 0, RogueEssence.Data.GameProgress.DungeonStakes.Risk, true, true)
        GAME:CutsceneMode(false)
      end
    end
  GAME:CutsceneMode(false)
    
  end
  GAME:FadeOut(false, 30)

  GAME:EnterDungeon('thieves_hideout', 0, 0, 0, RogueEssence.Data.GameProgress.DungeonStakes.Risk, true, true)

  GAME:CutsceneMode(false)

end

function guild_maze_entrance.Exit_Touch(obj, activator)

  local player = CH('PLAYER')
  local partner = CH('Teammate1')
  if SV.guild_maze_clearing.test_done == false then
    GAME:CutsceneMode(true)
    UI:SetSpeaker(partner)
    SOUND:PlaySE('Battle/EVT_Emote_Exclaim_2')
    GROUND:CharSetEmote(player, "exclaim", 1)
    UI:SetSpeakerEmotion("Worried")
    GROUND:CharTurnToChar(player, partner)
    GROUND:CharTurnToChar(partner, player)
    UI:WaitShowDialogue("Where are you going?")
    UI:WaitShowDialogue("The entrance is to the other side.")
    GAME:WaitFrames(60)

    UI:WaitShowDialogue("You aren't trying to run away, are you?")

    UI:SetSpeaker(player)
    UI:SetSpeakerEmotion("Stunned")
    UI:WaitShowDialogue("Of course not!")
    GAME:WaitFrames(80)

    UI:SetSpeaker(partner)
    UI:SetSpeakerEmotion("Worried")
    UI:WaitShowDialogue("Let's start with the test before it's too late.")
    GAME:CutsceneMode(false)
  elseif SV.guild_maze_clearing.test_done == true then
    GAME:FadeOut(false, 20)
    SV.partner.entrance = 1
    GAME:EnterZone('conceal_forest', -1, 2, 1)

  end



end
function introCutscene()
  GAME:CutsceneMode(true)
  local player = CH('PLAYER')
  local partner = CH('Teammate1')
  GAME:SetTeamName(player:GetDisplayName() .. " and " .. partner:GetDisplayName())

  GROUND:EntTurn(partner, Direction.DownRight)
  GROUND:EntTurn(player, Direction.UpLeft)


  GAME:WaitFrames(100)

  GROUND:CharSetAction(player, RogueEssence.Ground.PoseGroundAction(player.Position, player.Direction, RogueEssence.Content.GraphicsManager.GetAnimIndex("Laying")))
  GAME:FadeIn(220)
  GAME:WaitFrames(120)

  GROUND:CharSetDrawEffect(player, DrawEffect.Trembling)
  GAME:WaitFrames(30)
  GROUND:CharEndDrawEffect(player, DrawEffect.Trembling)

  GAME:WaitFrames(100)

  UI:SetSpeaker(player)
  UI:SetSpeakerEmotion("Pain")
  UI:WaitShowDialogue("Ugh...")
  UI:SetSpeaker(partner)
  UI:SetSpeakerEmotion("Worried")
  UI:WaitShowDialogue(STRINGS:Format("Hello, {0}.", player:GetDisplayName()))
  GAME:WaitFrames(80)

  GROUND:CharSetAnim(player, "Wake", false)
  GAME:WaitFrames(50)


  
  UI:SetSpeaker(player)
  UI:SetSpeakerEmotion("Pain")
  UI:WaitShowDialogue("Do you guys have no other way of carrying me around?")
  UI:WaitShowDialogue("I don't know,[pause=60] putting a sac over my head, or something?")
  GAME:WaitFrames(70)

  --The partner starts to believe the player, only a little
  UI:SetSpeaker(partner)
  UI:SetSpeakerEmotion("Worried")
  UI:WaitShowDialogue("Why would we do that?")
  UI:WaitShowDialogue(STRINGS:Format("You're a {0}, remember?", _DATA:GetMonster(player.CurrentForm.Species):GetColoredName()))
  GAME:WaitFrames(50)
  UI:SetSpeaker(player)
  UI:SetSpeakerEmotion("Worried")
  UI:WaitShowDialogue("So?")
  GAME:WaitFrames(70)

  UI:SetSpeaker(partner)
  UI:SetSpeakerEmotion("Stunned")
  UI:WaitShowDialogue('What do you mean "so"?')
  UI:WaitShowDialogue("Your aura abilities!")
  GAME:WaitFrames(50)
  UI:SetSpeakerEmotion("Worried")
  UI:WaitShowDialogue("Can't you remember that?")

  GAME:WaitFrames(60)
  UI:SetSpeaker('', true, player.CurrentForm.Species, player.CurrentForm.Form, player.CurrentForm.Skin, player.CurrentForm.Gender)
  UI:SetSpeakerEmotion("Worried")
  UI:WaitShowDialogue("(Aura abilities?)")
  GAME:WaitFrames(60)
  UI:SetSpeakerEmotion("Pain")
  --I forgot you could do the .. stuff with lua lmao
  UI:WaitShowDialogue("(Oh yeah, I'm a " .. _DATA:GetMonster(player.CurrentForm.Species):GetColoredName() .. " now.)")
  UI:WaitShowDialogue("(They can do that,[pause=40] and that means everyone will think I can as well.)")
  GAME:WaitFrames(80)
  UI:SetSpeaker(player)
  UI:SetSpeakerEmotion("Sad")
  UI:WaitShowDialogue("Yeah.[pause=0] Must have forgotten about it.")
  UI:SetSpeaker(partner)
  UI:SetSpeakerEmotion("Stunned")
  UI:WaitShowDialogue("Oh.")
  UI:SetSpeaker('', true, partner.CurrentForm.Species, partner.CurrentForm.Form, partner.CurrentForm.Skin, partner.CurrentForm.Gender)
  UI:SetSpeakerEmotion("Worried")
  UI:WaitShowDialogue("(Can " .. _DATA:GetMonster(player.CurrentForm.Species):GetColoredName() .. "... [pause=50]forget about their aura abilities?)")
  GAME:WaitFrames(70)
  UI:WaitShowDialogue("(That's not possible right?)")
  UI:WaitShowDialogue("(As far as I know, " .. _DATA:GetMonster(player.CurrentForm.Species):GetColoredName() .. " know how to manipulate aura before they are even born.)")
  UI:WaitShowDialogue("(Someone can't just... [pause=40]forget that,[pause=60] right?)")
  UI:WaitShowDialogue("(...)")
  GAME:WaitFrames(70)
  UI:WaitShowDialogue('("Turned into a Pokémon", huh...)')
  GAME:WaitFrames(60)
  UI:SetSpeakerEmotion("Pain")
  UI:WaitShowDialogue("(What am I even thinking?[pause=50] That's not possible!)[br](He's just lying.)")
  UI:WaitShowDialogue('(...)')
  GAME:WaitFrames(50)
  UI:WaitShowDialogue("(Just lying...)")

  --Player realizes that the partner is one of those members that "don't have another source of money" and his anger subsides
  SOUND:PlaySE('Battle/EVT_Emote_Exclaim_2')
  GROUND:CharSetEmote(player, "exclaim", 1)
  UI:SetSpeaker(player)
  UI:SetSpeakerEmotion("Worried")
  UI:WaitShowDialogue("Hey.")
  UI:WaitShowDialogue("Are you okay?")
  GAME:WaitFrames(70)

  UI:SetSpeaker(partner)
  UI:SetSpeakerEmotion("Stunned")
  UI:WaitShowDialogue("Yeah.")
  UI:SetSpeakerEmotion("Worried")
  UI:WaitShowDialogue("I was just thinking about stuff.")

  UI:SetSpeaker(player)
  UI:SetSpeakerEmotion("Worried")
  UI:WaitShowDialogue("Oh...")
  GAME:WaitFrames(70)
  UI:WaitShowDialogue("Look,[pause=50] ummm...")
  GAME:WaitFrames(80)
  UI:SetSpeaker(partner)
  UI:SetSpeakerEmotion("Worried")
  UI:WaitShowDialogue("What?")
  UI:SetSpeaker(player)
  UI:SetSpeakerEmotion("Worried")
  UI:WaitShowDialogue("The two Pokémon that were interrogating me were [color=#00ff00]Zoroark[color], right?")
  GAME:WaitFrames(70)

  UI:SetSpeaker(partner)
  UI:SetSpeakerEmotion("Worried")
  UI:WaitShowDialogue("Maybe...")
  UI:SetSpeakerEmotion("Worried")
  UI:WaitShowDialogue("What about it?")
  GAME:WaitFrames(60)
  UI:SetSpeaker(player)
  UI:SetSpeakerEmotion("Worried")
  UI:WaitShowDialogue('One of them,[pause=50] the visible one,[pause=40] said something about "members that think they are not cut out to be a thief, but still joined".')
  UI:SetSpeaker(partner)
  UI:SetSpeakerEmotion("Worried")
  UI:WaitShowDialogue("Yes?")
  GAME:WaitFrames(60)
  UI:SetSpeaker(player)
  UI:SetSpeakerEmotion("Worried")
  UI:WaitShowDialogue("You're one of those, aren't you?")
  GAME:WaitFrames(70)

  UI:WaitShowDialogue("You definitely acted way kinder than any of the members I've seen so far, and you even volunteered yourself to help me when we first met.")
  GAME:WaitFrames(60)

  UI:SetSpeaker(partner)
  UI:SetSpeakerEmotion("Stunned")
  UI:WaitShowDialogue("...")
  GAME:WaitFrames(60)
  UI:SetSpeakerEmotion("Sad")

  UI:WaitShowDialogue("Yeah,[pause=50] I am.")
  
  UI:SetSpeakerEmotion("Pain")
  UI:WaitShowDialogue("I joined very recently, and still haven't gotten used to it.")
  UI:WaitShowDialogue("I'm scared to mess up everything with my clumsiness and let down the whole guild...")
  UI:WaitShowDialogue("We found you just because I brought the police to them.")
  GROUND:CharSetDrawEffect(partner, DrawEffect.Trembling)
  UI:WaitShowDialogue("I almost made them get caught.")
  UI:WaitShowDialogue("It was my fault they brought you here and interrogated you.")
  UI:WaitShowDialogue("I made them believe you were an explorer, and now you're stuck doing this.")
  UI:WaitShowDialogue("I'm the-")
  GROUND:CharSetEmote(partner, "exclaim", 1)
  SOUND:PlaySE('Battle/EVT_Emote_Exclaim_2')
  GROUND:CharEndDrawEffect(partner, DrawEffect.Trembling)
  UI:SetSpeaker(player)
  UI:SetSpeakerEmotion("Determined")
  UI:WaitShowDialogue("Hey.")
  GAME:WaitFrames(60)

  UI:WaitShowDialogue("This isn't your fault, okay?")
  GAME:WaitFrames(60)
  UI:SetSpeakerEmotion("Worried")

  UI:WaitShowDialogue("You found me too close to your hideout, at the end of one of those Mystery Dungeons, isn't that right?")
  UI:SetSpeakerEmotion("Normal")
  UI:WaitShowDialogue("Whether you had found me at that moment or not, I wouldn't have found a way out of the forest, and I'd have come across you guys sooner or later.")

  UI:SetSpeaker(partner)
  UI:SetSpeakerEmotion("Sad")
  UI:WaitShowDialogue("I guess that's true, but...")
  GAME:WaitFrames(60)
  UI:WaitShowDialogue("I still lied to you...")

  UI:SetSpeaker(player)
  UI:SetSpeakerEmotion("Normal")
  UI:WaitShowDialogue("You did what you had to at that moment.")
  UI:WaitShowDialogue("You think I haven't lied to anyone before?")
  UI:WaitShowDialogue("You wanted to help without revealing your identity, even if you knew the townsfolk could recognize you and get you into trouble.")
 
  UI:SetSpeakerEmotion("Happy")
  UI:WaitShowDialogue("Few thieves I heard about do that!")
  GAME:WaitFrames(60)

  UI:SetSpeaker(partner)
  UI:SetSpeakerEmotion("Stunned")
  UI:WaitShowDialogue("You...[pause=70] Do you mean it?")
  GAME:WaitFrames(80)

  UI:SetSpeaker(player)
  UI:SetSpeakerEmotion("Happy")
  UI:WaitShowDialogue("Yeah.")
  GAME:WaitFrames(80)

  UI:SetSpeaker(partner)
  UI:SetSpeakerEmotion("Stunned")
  UI:WaitShowDialogue("...")
  UI:SetSpeakerEmotion("Happy")
  UI:WaitShowDialogue("Thank you!")
  UI:SetSpeakerEmotion("Sad")
  UI:WaitShowDialogue("You still deserve an apology, though.")

  GAME:WaitFrames(70)
  UI:SetSpeaker(player)
  UI:SetSpeakerEmotion("Sad")
  UI:WaitShowDialogue("I think I owe you one too.")
  UI:WaitShowDialogue("The way I spoke to you wasn't very appropriate.")
  UI:WaitShowDialogue("Stress and fear was making me angry, and the fact you betrayed me was the breaking point.")
  GAME:WaitFrames(60)

  UI:SetSpeaker(partner)
  UI:SetSpeakerEmotion("Happy")
  UI:WaitShowDialogue("[color=#00ff00]Arceus[color],[pause=30] please, don't worry about it, " .. player:GetDisplayName() .. "!")
  UI:SetSpeakerEmotion("Worried")
  UI:WaitShowDialogue("Some yelling is the least I've had to deal with.")

  GAME:WaitFrames(60)
  UI:SetSpeaker('', true, player.CurrentForm.Species, player.CurrentForm.Form, player.CurrentForm.Skin, player.CurrentForm.Gender)
  UI:SetSpeakerEmotion("Happy")
  UI:WaitShowDialogue("(Well, at least I know she didn't do it with malicious intent.)")
  
  UI:SetSpeaker(STRINGS:Format("\\uE040"), true, "", -1, "", RogueEssence.Data.Gender.Unknown)
  SOUND:PlaySE('Battle/EVT_Emote_Exclaim_2')

  local coro1 = TASK:BranchCoroutine(function() guild_maze_entrance.THEEmoteFunction(player, "exclaim") end)
  local coro2 = TASK:BranchCoroutine(function() guild_maze_entrance.THEEmoteFunction(partner, "exclaim") end)
  TASK:JoinCoroutines({coro1,coro2})
  UI:WaitShowDialogue("Well, what do we have here?")
  local boss = CH('Boss')

  GROUND:EntTurn(partner, Direction.Up)
  GROUND:EntTurn(player, Direction.Up)
  GROUND:MoveInDirection(boss, Direction.Down, 120, false, 1)
  GAME:WaitFrames(60)



  UI:SetSpeaker(STRINGS:Format("\\uE040"), true, boss.CurrentForm.Species, boss.CurrentForm.Form, boss.CurrentForm.Skin, boss.CurrentForm.Gender)
  UI:SetSpeakerEmotion("Normal")
  UI:WaitShowDialogue("Looks like someone decided to finally wake up.")
  GAME:WaitFrames(60)
  UI:SetSpeaker(player)
  UI:SetSpeakerEmotion("Worried")
  UI:WaitShowDialogue("Who are you?")
  GAME:WaitFrames(70)
  GROUND:CharSetEmote(player, "exclaim", 1)
  SOUND:PlaySE('Battle/EVT_Emote_Exclaim_2')

  UI:SetSpeakerEmotion("Surprised")
  UI:WaitShowDialogue("Wait, you were one of the two Pokémon that were in that clearing!")

  GAME:WaitFrames(60)
  UI:SetSpeaker(STRINGS:Format("\\uE040"), true, boss.CurrentForm.Species, boss.CurrentForm.Form, boss.CurrentForm.Skin, boss.CurrentForm.Gender)
  UI:SetSpeakerEmotion("Normal")
  UI:WaitShowDialogue("Indeed, " .. player:GetDisplayName() .. ". [br]And also your new boss if you manage to complete this challenge.")
  UI:WaitShowDialogue("For now, you can call me " .. boss:GetDisplayName() .. ".")
  GAME:WaitFrames(60)

  UI:SetSpeaker(boss)

  UI:WaitShowDialogue("But let's not dwell too much on it and get straight to the test.")
  UI:SetSpeakerEmotion("Worried")
  UI:WaitShowDialogue("I suppose you'd want to know about it, right " .. player:GetDisplayName() .. "?")
  GAME:WaitFrames(70)

  UI:SetSpeaker(player)
  UI:SetSpeakerEmotion("Determined")
  UI:WaitShowDialogue("I'm ready!")

  UI:SetSpeaker(boss)
  UI:SetSpeakerEmotion("Happy")
  UI:WaitShowDialogue("Good to see that sort of determination!")
  UI:SetSpeakerEmotion("Worried")
  UI:WaitShowDialogue("I suppose you already know what will happen if you fail, right?")

  GROUND:CharSetDrawEffect(player, DrawEffect.Trembling)
  GAME:WaitFrames(20)
  GROUND:CharEndDrawEffect(player, DrawEffect.Trembling)
  GAME:WaitFrames(80)

  UI:SetSpeaker(player)
  UI:SetSpeakerEmotion("Pain")
  UI:WaitShowDialogue("Yeah, you can skip the details of that...")

  GAME:WaitFrames(80)
  UI:SetSpeaker(boss)
  UI:SetSpeakerEmotion("Normal")
  UI:WaitShowDialogue("Very good.")
  GAME:WaitFrames(80)

  UI:WaitShowDialogue("The test is so simple even a baby could do it.")
  UI:WaitShowDialogue("You see,[pause=50] our hideout is very close to a few Mystery Dungeons,[pause=50] the place we found you being one of them.")
  UI:WaitShowDialogue("We are at the entrance of a dungeon that us members like to call [color=#fcacac]Shady Woods[color].")

  UI:SetSpeakerEmotion("Worried")
  UI:WaitShowDialogue("You could say it's our personal training maze.")
  UI:SetSpeakerEmotion("Normal")

  UI:WaitShowDialogue("At the end of the dungeon, you will find an object.")
  UI:WaitShowDialogue("Your task is simply to bring it back here.")
  GAME:WaitFrames(80)

  UI:SetSpeaker(player)
  UI:SetSpeakerEmotion("Worried")
  UI:WaitShowDialogue("Object?[br]What object?")

  UI:SetSpeaker(boss)
  UI:SetSpeakerEmotion("Normal")
  UI:WaitShowDialogue("You will know what it is when you see it.")
  UI:WaitShowDialogue("That being said, I do not trust you to enter the dungeon alone.")
  UI:WaitShowDialogue("And thus, our friend " .. partner:GetDisplayName() .. " here will accompany you.")

  GAME:WaitFrames(40)
  SOUND:PlaySE('Battle/EVT_Emote_Shock')
  GROUND:EntTurn(player, Direction.UpLeft)
  local coro1 = TASK:BranchCoroutine(function() guild_maze_entrance.THEEmoteFunction(player, "exclaim") end)
  local coro2 = TASK:BranchCoroutine(function() guild_maze_entrance.THEEmoteFunction(partner, "shock") end)
  TASK:JoinCoroutines({coro1,coro2})
  
  GAME:WaitFrames(90)

  UI:SetSpeaker(partner)
  UI:SetSpeakerEmotion("Surprised")
  UI:WaitShowDialogue("What?!")
  UI:WaitShowDialogue("You didn't tell me anything about this!")
  GAME:WaitFrames(80)

  UI:SetSpeaker(boss)
  UI:SetSpeakerEmotion("Worried")
  UI:WaitShowDialogue("Well, most of the teams haven't arrived yet, and the ones that are here are patrolling the area to make sure " .. player:GetDisplayName() .. " doesn't try to run away.")
  UI:WaitShowDialogue("And plus...")
  UI:SetSpeakerEmotion("Happy")
  UI:WaitShowDialogue("More dungeon experience is always good, isn't it?")
  UI:SetSpeakerEmotion("Normal")
  UI:WaitShowDialogue("Just think of it as another regular mission.")

  UI:SetSpeaker(partner)
  UI:SetSpeakerEmotion("Worried")
  UI:WaitShowDialogue("A regular mission?")
  GAME:WaitFrames(70)
  UI:SetSpeakerEmotion("Determined")
  UI:WaitShowDialogue("Okay! I can do that!")
  GAME:WaitFrames(70)

  UI:SetSpeaker('', true, player.CurrentForm.Species, player.CurrentForm.Form, player.CurrentForm.Skin, player.CurrentForm.Gender)
  UI:SetSpeakerEmotion("Stunned")
  UI:WaitShowDialogue("(She looks oddly ready for this.)")
  UI:WaitShowDialogue("(It's almost making me excited too.)")
  GAME:WaitFrames(80)
  UI:SetSpeakerEmotion("Pain")
  UI:WaitShowDialogue("(It may be just the adrenaline of thinking about the consequences, though...")
  GAME:WaitFrames(60)
  
  GROUND:EntTurn(partner, Direction.DownRight)

  UI:SetSpeaker(partner)
  UI:SetSpeakerEmotion("Determined")
  UI:WaitShowDialogue(player:GetDisplayName() .. "!")
  GROUND:EntTurn(player, Direction.UpLeft)
  UI:WaitShowDialogue("Are you ready?")

  UI:SetSpeaker(player)
  UI:SetSpeakerEmotion("Stunned")
  UI:WaitShowDialogue("Such a change in attitude...")
  GAME:WaitFrames(80)
  UI:SetSpeakerEmotion("Determined")
  UI:WaitShowDialogue("As ready as I can be.")
  UI:SetSpeaker('', true, player.CurrentForm.Species, player.CurrentForm.Form, player.CurrentForm.Skin, player.CurrentForm.Gender)
  UI:SetSpeakerEmotion("Pain")
  UI:WaitShowDialogue("(No other option...)")
  
  GROUND:EntTurn(player, Direction.Up)
  GROUND:EntTurn(partner, Direction.Up)
  UI:SetSpeaker(boss)
  UI:SetSpeakerEmotion("Happy")
  UI:WaitShowDialogue("Good to hear that.")
  UI:WaitShowDialogue("Hopefully, we'll see a new face around here soon.")
  UI:SetSpeakerEmotion("Normal")
  UI:WaitShowDialogue('See you soon, ' .. player:GetDisplayName() .. ' "the not explorer".')

  UI:SetSpeaker(player)
  UI:SetSpeakerEmotion("Determined")
  UI:WaitShowDialogue("I'm not an explorer.")

  UI:SetSpeaker(boss)
  UI:SetSpeakerEmotion("Normal")
  UI:WaitShowDialogue("Those are just words, " .. player:GetDisplayName() .. ".")
  UI:WaitShowDialogue("And I am not a 'mon that conforms with words.")


  GROUND:EntTurn(boss, Direction.DownLeft)
  GAME:WaitFrames(4)
  GROUND:EntTurn(boss, Direction.Left)
  GAME:WaitFrames(4)
  GROUND:EntTurn(boss, Direction.UpLeft)
  GAME:WaitFrames(4)
  GROUND:EntTurn(boss, Direction.Up)
  GAME:WaitFrames(60)

  UI:WaitShowDialogue("If you are really not an explorer, pass the test and show to me you are truly not on their side.")

  GAME:WaitFrames(80)
  UI:WaitShowDialogue("Good luck, " .. partner:GetDisplayName() .. ".[pause=0] You too, " .. player:GetDisplayName() .. ".")
  UI:WaitShowDialogue("I'll be watching you.")
  GAME:WaitFrames(60)

  UI:WaitShowDialogue("Oh,[pause=60] and " .. partner:GetDisplayName() .. ".")
  GAME:WaitFrames(60)
  UI:WaitShowDialogue("That dungeon can get a bit rough.[br]Make sure he doesn't get too hurt in there.")



  GROUND:MoveInDirection(boss, Direction.Up, 120, false, 1)

  GROUND:Hide('Boss')
  GAME:WaitFrames(80)
  GROUND:EntTurn(partner, Direction.DownRight)
 
  UI:SetSpeaker(partner)
  UI:SetSpeakerEmotion("Determined")
  UI:WaitShowDialogue("Alright, " .. player:GetDisplayName() .. ".")
  UI:WaitShowDialogue("Let's do this,[pause=40] shall we?")
  GROUND:EntTurn(player, Direction.UpLeft)

  UI:SetSpeaker(player)
  UI:SetSpeakerEmotion("Determined")
  UI:WaitShowDialogue("Right behind you!")
  GAME:WaitFrames(70)
  
  UI:SetSpeaker(partner)
  UI:SetSpeakerEmotion("Worried")
  UI:WaitShowDialogue("You know you are supposed to be leading, right?")

  GAME:WaitFrames(50)
  UI:SetSpeaker(player)
  UI:SetSpeakerEmotion("Stunned")
  UI:WaitShowDialogue("Leading? [pause=0]Me?")
  GAME:WaitFrames(70)

  UI:SetSpeaker(partner)
  UI:SetSpeakerEmotion("Worried")
  UI:WaitShowDialogue("I'm just here to make sure you don't wander too far away.")
  GAME:WaitFrames(70)

  UI:SetSpeaker(player)
  UI:SetSpeakerEmotion("Stunned")
  UI:WaitShowDialogue("What?")
  GAME:WaitFrames(40)

  UI:SetSpeaker('', true, player.CurrentForm.Species, player.CurrentForm.Form, player.CurrentForm.Skin, player.CurrentForm.Gender)
  UI:SetSpeakerEmotion("Worried")
  UI:WaitShowDialogue("(I suppose it makes sense, but...)")
  UI:SetSpeakerEmotion("Pain")
  UI:WaitShowDialogue("(Can I really do it?)")
  GAME:WaitFrames(60)
  UI:WaitShowDialogue("(We'll never know if I don't try.)")


  UI:SetSpeaker(player)
  UI:SetSpeakerEmotion("Determined")
  UI:WaitShowDialogue("Let's go for it!")

  UI:SetSpeaker(partner)
  UI:SetSpeakerEmotion("Determined")
  UI:WaitShowDialogue("Ready when you are, " .. player:GetDisplayName() .. "!")

  GAME:MoveCamera(0, 0, 1, true)




  AI:SetCharacterAI(partner, 'ai.ground_partner', CH('PLAYER'), partner.Position)
  partner.CollisionDisabled = true
 
 
  GAME:CutsceneMode(false)
  SV.guild_maze_entrance.intro = true

  SOUND:PlayBGM("B06. Bramble Woods.ogg", true) 


end
function guild_maze_entrance.THEEmoteFunction(char, emote)
  GROUND:CharSetEmote(char, emote, 1)
end
---guild_maze_entrance.Exit(map)
--Engine callback function
function guild_maze_entrance.Exit(map)


end

---guild_maze_entrance.Update(map)
--Engine callback function
function guild_maze_entrance.Update(map)


end

---guild_maze_entrance.GameSave(map)
--Engine callback function
function guild_maze_entrance.GameSave(map)
  local partner = CH('Teammate1')
  SV.partner.positionX = partner.Position.X
	SV.partner.positionY = partner.Position.Y
	SV.partner.direction = DirToNum(partner.Direction)

end

---guild_maze_entrance.GameLoad(map)
--Engine callback function
function guild_maze_entrance.GameLoad(map)
  --[[
  GROUND:RefreshPlayer()


    local party = GAME:GetPlayerPartyTable()
    local playeridx = GAME:GetTeamLeaderIndex()
  
    --Place player teammates
    for i = 1,3,1
    do
      GROUND:RemoveCharacter("TEAMMATE_1_first")
    end
    local total = 1
    for i,p in ipairs(party) do
      if i ~= (playeridx + 1) then --Indices in lua tables begin at 1
        GROUND:SpawnerSetSpawn("TEAMMATE_1_first",p)
        local chara = GROUND:SpawnerDoSpawn("TEAMMATE_1_first")
        --GROUND:GiveCharIdleChatter(chara)
        total = total + 1
      end
    end
  local partner = CH('Teammate1')
]]
 
  local partners = CH('Teammate1')
  GROUND:TeleportTo(partners, SV.partner.positionX, SV.partner.positionY, NumToDir(SV.partner.direction))
  

	AI:SetCharacterAI(partners, "ai.ground_partner", CH('PLAYER'), partners.Position)
  	AI:EnableCharacterAI(partners)
  partners.CollisionDisabled = true
  SOUND:PlayBGM("B06. Bramble Woods.ogg", true) 

  GAME:FadeIn(20)
  
end
--Halcyon's partner stuff

--assigns a number value to each direction, useful for figuring out how many turn a direction is from another
function DirToNum(dir)
	--up is 0, upright is 1, ... up left is 7
	local num = -1
	if dir == Direction.Up then
		num = 0
	elseif dir == Direction.UpRight then
		num = 1
	elseif dir == Direction.Right then
		num = 2
	elseif dir == Direction.DownRight then
		num = 3
	elseif dir == Direction.Down then
		num = 4
	elseif dir == Direction.DownLeft then
		num = 5
	elseif dir == Direction.Left then
		num = 6
	elseif dir == Direction.UpLeft then
		num = 7
	end
	
	return num
	
end


--converts a number to a direction
function NumToDir(num)
	local dir = Direction.None
	if num % 8 == 0 then 
		dir = Direction.Up
	elseif num % 8 == 1 then
		dir = Direction.UpRight
	elseif num % 8 == 2 then
		dir = Direction.Right
	elseif num % 8 == 3 then
		dir = Direction.DownRight
	elseif num % 8 == 4 then
		dir = Direction.Down
	elseif num % 8 == 5 then
		dir = Direction.DownLeft
	elseif num % 8 == 6 then
		dir = Direction.Left
	elseif num % 8 == 7 then
		dir = Direction.UpLeft
	end

	return dir
end



-------------------------------
-- Entities Callbacks
-------------------------------


return guild_maze_entrance

