--[[
    init.lua
    Created: 05/20/2024 12:06:28
    Description: Autogenerated script file for the map gelid_woods.
]]--
-- Commonly included lua functions and data
require 'common'
require 'CommonFunctions'
-- Package name
local gelid_woods = {}

-- Local, localized strings table
-- Use this to display the named strings you added in the strings files for the map!
-- Ex:
--      local localizedstring = MapStrings['SomeStringName']
local MapStrings = {}

-------------------------------
-- Map Callbacks
-------------------------------
---gelid_woods.Init(map)
--Engine callback function
function gelid_woods.Init(map)

  --This will fill the localized strings table automatically based on the locale the game is 
  -- currently in. You can use the MapStrings table after this line!
  MapStrings = COMMON.AutoLoadLocalizedStrings()
  COMMON.RespawnAllies()
	if SV.progression.first_day_done then
		local partners = CH('Teammate1')
   	 	AI:SetCharacterAI(partners, "ai.ground_partner", CH('PLAYER'), partners.Position)
    	AI:EnableCharacterAI(partners)
    	partners.CollisionDisabled = true

	else
		SOUND:FadeOutBGM(1)

	end
	
end

---gelid_woods.Enter(map)
--Engine callback function
function gelid_woods.Enter(map)
	local partners = CH('Teammate1')
	local mrkr = MRKR('mrkr_2')
	if not SV.gelid_woods.intro and not SV.progression.first_day_done then
		--First time
		intro()
	
	
	  elseif SV.gelid_woods.intro and not SV.gelid_woods.boss_intro and not SV.progression.first_day_done then
		--fainted before reaching the end
		GROUND:TeleportTo(partners, mrkr.Position.X, mrkr.Position.Y, mrkr.Direction)

		fainted1()
		


	elseif SV.gelid_woods.intro and SV.gelid_woods.boss_intro and not SV.progression.first_day_done then
		--fainted during the boss fight.
		GROUND:TeleportTo(partners, mrkr.Position.X, mrkr.Position.Y, mrkr.Direction)

		fainted2()

	elseif SV.gelid_woods.intro and SV.progression.first_day_done then
		--Do nothing and fade the screen
		GAME:FadeIn(20)
	
	end
	





end

---gelid_woods.Exit(map)
--Engine callback function
function gelid_woods.Exit(map)


end

---gelid_woods.Update(map)
--Engine callback function
function gelid_woods.Update(map)


end

---gelid_woods.GameSave(map)
--Engine callback function
function gelid_woods.GameSave(map)
  local partner = CH('Teammate1')
  SV.partner.positionX = partner.Position.X
	SV.partner.positionY = partner.Position.Y
	SV.partner.direction = DirToNum(partner.Direction)

end

---gelid_woods.GameLoad(map)
--Engine callback function
function gelid_woods.GameLoad(map)
  local partners = CH('Teammate1')
  AI:DisableCharacterAI(partners)
  GROUND:TeleportTo(partners, SV.partner.positionX, SV.partner.positionY, NumToDir(SV.partner.direction))
  

	AI:SetCharacterAI(partners, "ai.ground_partner", CH('PLAYER'), partners.Position)
  AI:EnableCharacterAI(partners)
  partners.CollisionDisabled = true
  GAME:FadeIn(20)

end
function DirToNum(dir)
	--up is 0, upright is 1, ... up left is 7
	local num = -1
	if dir == Direction.Up then
		num = 0
	elseif dir == Direction.UpRight then
		num = 1
	elseif dir == Direction.Right then
		num = 2
	elseif dir == Direction.DownRight then
		num = 3
	elseif dir == Direction.Down then
		num = 4
	elseif dir == Direction.DownLeft then
		num = 5
	elseif dir == Direction.Left then
		num = 6
	elseif dir == Direction.UpLeft then
		num = 7
	end
	
	return num
	
end
--converts a number to a direction
function NumToDir(num)
	local dir = Direction.None
	if num % 8 == 0 then 
		dir = Direction.Up
	elseif num % 8 == 1 then
		dir = Direction.UpRight
	elseif num % 8 == 2 then
		dir = Direction.Right
	elseif num % 8 == 3 then
		dir = Direction.DownRight
	elseif num % 8 == 4 then
		dir = Direction.Down
	elseif num % 8 == 5 then
		dir = Direction.DownLeft
	elseif num % 8 == 6 then
		dir = Direction.Left
	elseif num % 8 == 7 then
		dir = Direction.UpLeft
	end

	return dir
end 
-------------------------------
-- Entities Callbacks
-------------------------------
--Luping try not to make a dungeon that's a forest challenge (impossible)
function intro()
	--SOUND:FadeOutBGM(1)

  local player = CH('PLAYER')
  local partner = CH('Teammate1')
	AI:DisableCharacterAI(partner)
	GAME:CutsceneMode(true)
  GAME:WaitFrames(80)
  UI:ResetSpeaker()
  UI:WaitShowDialogue("It's so cold!")
  GAME:WaitFrames(70)
  GAME:MoveCamera(190, 92, 1, false)

  SOUND:PlayBGM("B19. Bramble Thicket", true)
  
  GAME:FadeIn(20)
  --180 70
  local coro1 = TASK:BranchCoroutine(function() GROUND:MoveToPosition(player, 170, 70, false, 1.5) 
                                                GROUND:CharTurnToCharAnimated(player, partner,4) end)
  local coro2 = TASK:BranchCoroutine(function() GROUND:MoveToPosition(partner, 195, 70, false, 1.5) 
                                                GROUND:CharTurnToCharAnimated(partner, player,4) end)

   
  TASK:JoinCoroutines({coro1,coro2})
  GAME:WaitFrames(60)
 
  CommonFunctions.Dialogue(player, 3, "Pain", "How is it possible there's so much snow?")
  CommonFunctions.Dialogue(player, 3, "Pain", "We've been walking for just a few hours and we have barely changed elevation!")

  CommonFunctions.Dialogue(partner, 3, "Normal", "It's because we're next to a dungeon with a very low temperature.")
  CommonFunctions.Dialogue(partner, 3, "Pain", "And think that it's twice as bad on me than it is on you!") --Grass is not good against ice.
  GAME:WaitFrames(60)
 
  CommonFunctions.Dialogue(partner, 3, "Pain", "And I'm pretty sure the inside is the same or even worse...")
  GROUND:CharAnimateTurn(partner, Direction.Up, 4, false)
  GAME:WaitFrames(20)
  GROUND:CharAnimateTurn(player, Direction.Up, 4, true)

  CommonFunctions.Dialogue(partner, 3, "Worried", "No matter.") 
  CommonFunctions.Dialogue(partner, 3, "Normal", "We should be pretty close to the entrance of the dungeon.") 
  CommonFunctions.Dialogue(player, 3, "Worried", "How are we gonna know when that archaeologist will pass through the dungeon?[pause=40] Or if they and those explorers have passed already?") 
  GAME:WaitFrames(60)
  CommonFunctions.Dialogue(partner, 3, "Worried", "We'll have to go through and hide somewhere, and pray that we'll be the first ones to come across their path.") 
  CommonFunctions.Dialogue(player, 3, "Worried", "Doesn't sound like a very good plan...") 
  CommonFunctions.Dialogue(player, 3, "Pain", "But it's not like we have something else in mind...") 
  GAME:WaitFrames(60)
  CommonFunctions.Dialogue(partner, 3, "Normal", "Well, I'm ready whenever you are!") 
  CommonFunctions.Dialogue(player, 3, "Normal", "Let's do this!") 
  

  AI:SetCharacterAI(partner, "ai.ground_partner", CH('PLAYER'), partner.Position)
  AI:EnableCharacterAI(partner)
  partner.CollisionDisabled = true
  GAME:MoveCamera(0, 0, 20, true)
  GAME:CutsceneMode(false)
  SV.gelid_woods.intro = true

end
function fainted1()
	GAME:CutsceneMode(true)
	local player = CH('PLAYER')
	local partner = CH('Teammate1')
	GROUND:CharSetAnim(player, "Laying", true)
	GROUND:CharSetAnim(partner, "Laying", true)


	GAME:WaitFrames(80)
	GAME:FadeIn(20)
	GAME:WaitFrames(80)
	GROUND:CharSetDrawEffect(player, DrawEffect.Trembling)
	GAME:WaitFrames(10)
	GROUND:CharSetDrawEffect(partner, DrawEffect.Trembling)
	GAME:WaitFrames(20)
	GROUND:CharEndDrawEffect(player, DrawEffect.Trembling)
	GAME:WaitFrames(10)
	GROUND:CharEndDrawEffect(partner, DrawEffect.Trembling)
	GAME:WaitFrames(80)
	CommonFunctions.Dialogue(partner, 3, "Pain", "Ugh...[pause=30] I hate snow so much...")
	CommonFunctions.Dialogue(player, 3, "Pain", "We couldn't see anything coming...")
	GAME:WaitFrames(30)
	GROUND:CharSetAnim(player, "Wake", false)
	GAME:WaitFrames(10)
	GROUND:CharWaitAnim(partner, "Wake") 
	GAME:WaitFrames(60)
	CommonFunctions.Dialogue(partner, 3, "Worried", "Let's not waste anymore time in here.[br]Our target could be anywhere while we chat.")
	CommonFunctions.Dialogue(player, 3, "Normal", "We should be more careful now...")

	AI:SetCharacterAI(partner, "ai.ground_partner", CH('PLAYER'), partner.Position)
	AI:EnableCharacterAI(partner)
	partner.CollisionDisabled = true
	GAME:CutsceneMode(false)
end
function fainted2()
	GAME:CutsceneMode(true)
	local player = CH('PLAYER')
	local partner = CH('Teammate1')
	GROUND:CharSetAnim(player, "Laying", true)
	GROUND:CharSetAnim(partner, "Laying", true)
	GAME:WaitFrames(80)
	GAME:FadeIn(20)
	GAME:WaitFrames(80)
	GROUND:CharSetDrawEffect(player, DrawEffect.Trembling)
	GAME:WaitFrames(10)
	GROUND:CharSetDrawEffect(partner, DrawEffect.Trembling)
	GAME:WaitFrames(20)
	GROUND:CharEndDrawEffect(player, DrawEffect.Trembling)
	GAME:WaitFrames(10)
	GROUND:CharEndDrawEffect(partner, DrawEffect.Trembling)
	GAME:WaitFrames(80)
	CommonFunctions.Dialogue(player, 3, "Pain", "Owowow...")
	CommonFunctions.Dialogue(partner, 3, "Pain", "I can't tell what's worse,[pause=30] snow[pause=40] or getting burned...") 
	GROUND:CharSetAnim(player, "Wake", false)
	GAME:WaitFrames(10)
	GROUND:CharWaitAnim(partner, "Wake") 
	GAME:WaitFrames(60)
	CommonFunctions.Dialogue(partner, 3, "Determined", player:GetDisplayName() .. "![br]We have to hurry and get back there![br]We can't let them heal up or rest!")
	CommonFunctions.Dialogue(player, 3, "Determined", "On it![br]Let's show them!")
	AI:SetCharacterAI(partner, "ai.ground_partner", CH('PLAYER'), partner.Position)
	AI:EnableCharacterAI(partner)
	partner.CollisionDisabled = true
	GAME:CutsceneMode(false)
	GAME:CutsceneMode(false)
end
function gelid_woods.down_Touch(obj, activator)
	UI:ResetSpeaker()
	--I implemented logic for a simple "no" just to reference Snow on Mt. Silver instead of actively optimizing my code where it's needed :D
	if SV.gelid_woods.intro and not SV.gelid_woods.boss_intro then
		UI:WaitShowDialogue("(We can't turn back now.)") 
	elseif SV.gelid_woods.intro and SV.gelid_woods.boss_intro and not SV.progression.first_day_done then
		UI:WaitShowDialogue("(We can't run away.)") 
	elseif SV.gelid_woods.intro and SV.gelid_woods.boss_intro and SV.progression.first_day_done then
		UI:WaitShowDialogue("(We can't turn back now.)") 
	end
end
function gelid_woods.dungeon_entrance_Touch(obj, activator)
	UI:ResetSpeaker()
	UI:ChoiceMenuYesNo("Are you ready to enter the dungeon?")
	UI:WaitForChoice()
	local yesnoResult = UI:ChoiceResult()
	if yesnoResult then
		GAME:FadeOut(false, 20)
  		GAME:EnterDungeon('gelid_woods', 0, 0, 0, RogueEssence.Data.GameProgress.DungeonStakes.Risk, true, true)


	else

	end
end
function gelid_woods.DebugNo_Action(obj, activator)
	SV.progression.chapter = 2
	CommonFunctions.Dialogue(obj, 3, "Normal", "Chapter is now 2! How does it feel like living in the future?")


end
return gelid_woods