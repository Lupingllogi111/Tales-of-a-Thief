--[[
    init.lua
    Created: 04/13/2024 14:14:15
    Description: Autogenerated script file for the map shop_area.
]]--
-- Commonly included lua functions and data
require 'common'
require 'CommonFunctions'
-- Package name
local shop_area = {}

-- Local, localized strings table
-- Use this to display the named strings you added in the strings files for the map!
-- Ex:
--      local localizedstring = MapStrings['SomeStringName']
local MapStrings = {}

-------------------------------
-- Map Callbacks
-------------------------------
---shop_area.Init(map)
--Engine callback function
function shop_area.Init(map)

  --This will fill the localized strings table automatically based on the locale the game is 
  -- currently in. You can use the MapStrings table after this line!
  MapStrings = COMMON.AutoLoadLocalizedStrings()
  COMMON.RespawnAllies()
  local partners = CH('Teammate1')
  AI:SetCharacterAI(partners, "ai.ground_partner", CH('PLAYER'), partners.Position)
  AI:EnableCharacterAI(partners)
  partners.CollisionDisabled = true
end

---shop_area.Enter(map)
--Engine callback function
function shop_area.Enter(map)
	local partners = CH('Teammate1')
	AI:DisableCharacterAI(partners)

 
	if SV.partner.entrance == 0 then
		-- do nothing
	elseif SV.partner.entrance == 1 then
		local partners = CH('Teammate1')
		local marker = MRKR('mrkr_prtn_1') --I don't add similar names to the markers because I'm dumb
		GROUND:TeleportTo(partners, marker.Position.X, marker.Position.Y, marker.Direction)


	end
	AI:SetCharacterAI(partners, "ai.ground_partner", CH('PLAYER'), partners.Position)
	AI:EnableCharacterAI(partners)
	partners.CollisionDisabled = true
  GAME:FadeIn(20)

end

---shop_area.Exit(map)
--Engine callback function
function shop_area.Exit(map)


end

---shop_area.Update(map)
--Engine callback function
function shop_area.Update(map)


end

---shop_area.GameSave(map)
--Engine callback function
function shop_area.GameSave(map)
  	local partner = CH('Teammate1')
  	SV.partner.positionX = partner.Position.X
	SV.partner.positionY = partner.Position.Y
	SV.partner.direction = DirToNum(partner.Direction)

end

---shop_area.GameLoad(map)
--Engine callback function
function shop_area.GameLoad(map)
  local partners = CH('Teammate1')
  GROUND:TeleportTo(partners, SV.partner.positionX, SV.partner.positionY, NumToDir(SV.partner.direction))

	AI:SetCharacterAI(partners, "ai.ground_partner", CH('PLAYER'), partners.Position)
  AI:EnableCharacterAI(partners)
  partners.CollisionDisabled = true
  
  GAME:FadeIn(20)

end
function DirToNum(dir)
	--up is 0, upright is 1, ... up left is 7
	local num = -1
	if dir == Direction.Up then
		num = 0
	elseif dir == Direction.UpRight then
		num = 1
	elseif dir == Direction.Right then
		num = 2
	elseif dir == Direction.DownRight then
		num = 3
	elseif dir == Direction.Down then
		num = 4
	elseif dir == Direction.DownLeft then
		num = 5
	elseif dir == Direction.Left then
		num = 6
	elseif dir == Direction.UpLeft then
		num = 7
	end
	
	return num
	
end
--converts a number to a direction
function NumToDir(num)
	local dir = Direction.None
	if num % 8 == 0 then 
		dir = Direction.Up
	elseif num % 8 == 1 then
		dir = Direction.UpRight
	elseif num % 8 == 2 then
		dir = Direction.Right
	elseif num % 8 == 3 then
		dir = Direction.DownRight
	elseif num % 8 == 4 then
		dir = Direction.Down
	elseif num % 8 == 5 then
		dir = Direction.DownLeft
	elseif num % 8 == 6 then
		dir = Direction.Left
	elseif num % 8 == 7 then
		dir = Direction.UpLeft
	end

	return dir
end 
-------------------------------
-- Entities Callbacks
-------------------------------
function shop_area.Exit_0_Touch(obj, activator)
  SV.partner.entrance = 3
  GAME:FadeOut(false, 20)
  GAME:EnterZone('thieves_hideout', -1, 7, 6)
	if not SV.guild.storagekeeper_is_annoyed then
		SV.guild.storagekeeper_annoyed_times = 0

	else
		--Do nothing

	end
end
function shop_area.exit_right_Touch(obj, activator)
	--GAME:FadeOut(false, 20)
	--GAME:EnterZone('thieves_hideout', -1, 0, 0)


	
end
function shop_area.Teammate1_Action(obj, activator)
	GAME:CutsceneMode(true)

	if not SV.guildmasters_office.officially_joined then
	
	GROUND:CharTurnToCharAnimated(obj, activator, 5)
	GROUND:CharTurnToCharAnimated(activator, obj, 5)
	Dialogue(obj, "Normal", "This is where our facilities are located.")
	Dialogue(obj, "Normal", "Here, Pok√©mon from the [color=#03f8fc]Shops Guild[color] come to sell us equipment in exchange of some of the loot.")
	Dialogue(obj, "Worried", "They don't live here, because they are technically not members...")
	Dialogue(obj, "Happy", "But it's still nice to have them around!")
	Dialogue(obj, "Normal", "You'll have to talk to them one way or another, so you should introduce yourself now if you haven't already.")
	--Add a way so this doesn't loop

	end

	GAME:CutsceneMode(false)

end
--Thank you Halcyon <3
function shop_area.GetItemArticle(item, uppercase)
	if uppercase == nil then uppercase = false end 
	
	local article = 'a'
	local first_letter = string.upper(string.sub(_DATA:GetItem(item.ID).Name:ToLocal(), 1, 1))

	if first_letter == "A" or first_letter == 'E' or first_letter == 'I' or first_letter == 'O' or first_letter == 'U' then article = 'an' end
	
	if uppercase then article = FirstToUpper(article) end
	
	return article
end
function shop_area.SendInvToStorage(sendItems, sendMoney, keepEquips)
	local itemCount = GAME:GetPlayerBagCount()
	local money = GAME:GetPlayerMoney()
	local item
	
	--only send money/items if we specify it. By default, send items AND money to storage.
	if sendItems == nil then sendItems = true end
	if sendMoney == nil then sendMoney = true end
	if keepEquips == nil then keepEquips = false end
	
	if sendMoney then 
		--move player's money to the bank
		GAME:RemoveFromPlayerMoney(money)
		GAME:AddToPlayerMoneyBank(money)
	end
	
	if sendItems then 
		for i = 1, itemCount, 1 do
			item = GAME:GetPlayerBagItem(0)
			GAME:TakePlayerBagItem(0)
			GAME:GivePlayerStorageItem(item)
		end
		
		if not keepEquips then
			--send equipped items to storage
			for i = 1, GAME:GetPlayerPartyCount(), 1 do
				item = GAME:GetPlayerEquippedItem(i-1)
				if item.ID ~= "" then 
					GAME:TakePlayerEquippedItem(i-1)
					GAME:GivePlayerStorageItem(item)
				end
			end
		end
	end
end
function shop_area.WeightedRandom (weights)
    local summ = 0
    for i, value in pairs (weights) do
        summ = summ + value[2]
    end
    if summ == 0 then return end
    -- local value = math.random (summ) -- for integer weights only
    local rand = summ*math.random ()
    summ = 0
    for i, value in pairs (weights) do
        summ = summ + value[2]
        if rand <= summ then
            return value[1]--, weight
        end
    end
end
function shop_area.GenerateShopStock(generate_random_item)
	
	--Start with predefined list of weighted items, then generate a stock of several items from those lists
	--Stocks are separated based on category (food, medicine, hold item, etc).
	--Kec stock isn't totally random, it pulls a gauranteed number from each stock  (i.e. always 1 hold item a day, but which it is is random)
	
	local stock = {}
	
	--This parameter determines whether to generate a random item or to actually refresh the stock.
	--The parameter should be true if we want to generate and return a single kec item (useful for red merchant)
	--This is a bit of a lazy/poor way of doing it, but it should work fine for how often it's used.
	if generate_random_item == nil then generate_random_item = false end
	
	--TODO: Add more types of stock progressions later on 
	--Basic Stock, early game
	
	--total weight = 100
	local food_stock = {
		{"food_apple", 182}, --Apple
		{"gummi_blue", 1}, --Blue Gummi
		{"gummi_black", 1}, --Black Gummi
		{"gummi_clear", 1}, --Clear Gummi
		{"gummi_grass", 1}, --Grass Gummi
		{"gummi_green", 1}, --Green Gummi
		{"gummi_brown", 1}, --Brown Gummi
		{"gummi_orange", 1}, --Orange Gummi
		{"gummi_gold", 1}, --Gold Gummi
		{"gummi_pink", 1}, --Pink Gummi
		{"gummi_purple", 1}, --Purple Gummi
		{"gummi_red", 1}, --Red Gummi
		{"gummi_royal", 1}, --Royal Gummi
		{"gummi_silver", 1}, --Silver Gummi
		{"gummi_white", 1}, --White Gummi
		{"gummi_yellow", 1}, --Yellow Gummi
		{"gummi_sky", 1}, --Sky Gummi
		{"gummi_gray", 1}, --Gray Gummi
		{"gummi_magenta", 1}	--Magenta Gummi
	}
	
	--total weight = 120
	local medicine_stock = {
		{"seed_reviver", 10},--Reviver seed 
		{"seed_warp", 5}, --Warp Seed 
		{"seed_sleep", 5}, --Sleep seed 
		{"seed_vile", 2}, --Vile seed 
		{"seed_decoy", 6}, --decoy seed 
		{"seed_blast", 8}, --Blast seed
		
		{"berry_leppa", 25}, --Leppa berry 

		
		{"berry_oran", 32}, --Oran berry
		{"berry_lum", 2}, --Lum berry 
		{"berry_cheri", 6}, -- Cheri berry 
		{"berry_chesto", 4}, -- Chesto berry 
		{"berry_pecha", 8}, -- Pecha berry 
		 -- Aspear berry 
		{"berry_rawst", 4}, -- Rawst berry 
		{"berry_persim", 6} -- Persim berry 
	}
	
	
	local ammo_stock = 
	{
		{"ammo_geo_pebble", 50}, --Geo pebble 
		{"ammo_stick", 50},--stick 
		{"ammo_iron_thorn", 50}--iron thorn 
	}
	
	
	local held_stock = {
		{"held_power_band", 10}, -- power band 
		{"held_special_band", 10}, --special band 
		{"held_defense_scarf", 10}, --defense scarf 
		{"held_zinc_band", 10}, --Zinc band 
		
		{"held_pecha_scarf", 10}, --Pecha Scarf
		{"held_cheri_scarf", 10}, --Cheri scarf 
		{"held_rawst_scarf", 10}, --Rawst scarf 
		{"held_aspear_scarf", 10}, --Aspear Scarf 
		{"held_insomniascope", 10}, --Insomnia scope
		{"held_persim_band", 10}, --Persim Band
		
		{"held_reunion_cape", 2} --Reunion cape 
		
	}
	

	
	local wand_stock = {
		{"wand_path", 10},--path wand 
		{"wand_pounce", 10},--pounce wand 
		{"wand_whirlwind", 10},--whirlwind wand 
		{"wand_switcher", 10},--switcher wand 
		{"wand_lure", 10},--lure wand 
		{"wand_slow", 10},--slow wand 
		{"wand_fear", 10},--fear wand 
		{"wand_topsy_turvy", 5},--topsy turvy wand 
		{"wand_warp", 5},--warp wand 
		{"wand_purge", 5},--purge wand 
		{"wand_lob", 10}, --lob wand 
		{"wand_totter", 10} --totter wand 
	}
	
	
	local orb_stock = 
	{
		{"orb_escape", 50},--escape orb 
		{"orb_cleanse", 10},--cleanse orb 
		
		{"orb_petrify", 10},--petrify orb 
		{"orb_slumber", 10},--slumber orb 
		{"orb_totter", 10},--totter orb 
		{"orb_scanner", 10},--scanner orb
		{"orb_luminous", 10},--luminous orb
		{"orb_spurn", 10},--spurn orb 
		{"orb_foe_hold", 10},--foe hold orb 
		{"orb_foe_seal", 10},--foe seal orb 
		{"orb_rollcall", 15},--rollcall orb 
		{"orb_trawl", 5}, --trawl orb 
		{"orb_all_aim", 10},--all aim orb
		{"orb_invert", 5}, --invert orb 
		{"orb_fill_in", 5} --fill in orb
	}

	
		table.insert(stock, shop_area.WeightedRandom(held_stock))
		table.insert(stock, shop_area.WeightedRandom(ammo_stock))
		table.insert(stock, shop_area.WeightedRandom(food_stock))
		table.insert(stock, shop_area.WeightedRandom(food_stock))
		table.insert(stock, shop_area.WeightedRandom(medicine_stock))	
		table.insert(stock, shop_area.WeightedRandom(medicine_stock))
		table.insert(stock, shop_area.WeightedRandom(medicine_stock))
		table.insert(stock, shop_area.WeightedRandom(wand_stock))
	
	
	if not generate_random_item then 
		--set stock to randomized assortment and flag that the stock was refreshed for the day
		SV.refreshed_shop_stock = true
		SV.shop_stock = stock
	else 
		return stock[math.random(1, #stock)]
	end
	
end


function shop_area.Shop_Action(obj, activator)
	local player = activator
	local partner = CH('Teammate1')
	local lily = CH('purrloin')
	GAME:CutsceneMode(true)

	GROUND:CharTurnToChar(partner, lily)

	if not SV.guild.presented_to_lily then
		UI:SetSpeaker(STRINGS:Format("\\uE040"), true, lily.CurrentForm.Species, lily.CurrentForm.Form, lily.CurrentForm.Skin, lily.CurrentForm.Gender)
		UI:SetSpeakerEmotion('Pain')
		UI:WaitShowDialogue("Ugh...[br]Can't believe I had to cut today's selling short because of product shortage again...[br]I swear I could just drop a good girl act in the middle of the town and get three times more stuff than any member of the [color=#03f8fc]Shops Guild[color] does...")
		UI:WaitShowDialogue("Just a little...")
		UI:SetSpeakerEmotion('Teary-Eyed')
		UI:WaitShowDialogue("Please sir...")
		UI:SetSpeakerEmotion('Pain')
		UI:WaitShowDialogue("And everyone would just give me anything I ask for!")
		UI:SetSpeakerEmotion('Determined')

		UI:WaitShowDialogue("But noooo!")
		
		UI:WaitShowDialogue("'Ye'r too young to do somethin' like that!' She says...")
		UI:SetSpeakerEmotion('Pain')
		UI:WaitShowDialogue("Am I going to stay in this cave forever?")
		GAME:WaitFrames(40)

		UI:SetSpeakerEmotion('Sad')
		UI:WaitShowDialogue("When will she understand that it wasn't her fault?")

		GAME:WaitFrames(80)


		Dialogue(partner, "Worried", lily:GetDisplayName().."?")
		SOUND:PlaySE('Battle/EVT_Emote_Exclaim_2')
		GROUND:CharSetEmote(lily, "exclaim", 1)
		GROUND:CharTurnToCharAnimated(lily, partner, 3)
		GAME:WaitFrames(70)
		Dialogue(lily, "Surprised", "Ack!")
		Dialogue(lily, "Determined", "Dammit, " .. partner:GetDisplayName().."![br]You almost gave me a heart attack!")
		Dialogue(partner, "Stunned", "Oh!")
		Dialogue(partner, "Sad", "Sorry...")

		GAME:WaitFrames(50)

		Dialogue(lily, "Sigh", "Don't worry...")

		Dialogue(lily, "Sigh", "It was my fault for not paying attention anyway...")
		SOUND:PlaySE('Battle/EVT_Emote_Exclaim')
		GROUND:CharSetEmote(lily, "notice", 1)
		GAME:WaitFrames(50)

		GROUND:CharTurnToCharAnimated(lily, player, 5)
		GAME:WaitFrames(70)
		Dialogue(lily, "Normal", "And who may this handsome little fellow next to you be?")
		GAME:WaitFrames(40)
		
		UI:SetSpeaker('', true, player.CurrentForm.Species, player.CurrentForm.Form, player.CurrentForm.Skin, player.CurrentForm.Gender)
		UI:SetSpeakerEmotion("Stunned")
		UI:WaitShowDialogue("(Handsome?)")

		Dialogue(partner, "Normal", lily:GetDisplayName()..",[pause=30] this is " .. player:GetDisplayName() ..".")
		Dialogue(partner, "Normal", "He's the newest member since a few minutes ago.")

		Dialogue(lily, "Special3", player:GetDisplayName().."...[br]Lovely,[pause=50] just like its bearer...")
		GAME:WaitFrames(30)

		SOUND:PlaySE("Battle/EVT_Emote_Sweatdrop")
		GROUND:CharSetEmote(player, "sweatdrop", 1)
		GAME:WaitFrames(90)
		Dialogue(player, "Stunned", "Uh...[br]Thank you?")
		GAME:WaitFrames(20)
		GROUND:CharTurnToCharAnimated(partner, player, 4)
		GROUND:CharTurnToCharAnimated(player, partner, 4)

		--Attract moment
		Dialogue(partner, "Worried", lily:GetDisplayName() .. " can act a bit...[pause=50] charming sometimes.")
		GROUND:CharTurnToCharAnimated(player, lily, 4)

		Dialogue(lily, "Special0", "Only with the few cuties that truly deserve it. " .. STRINGS:Format("\\u2661"))
		GAME:WaitFrames(50)
		Dialogue(player, "Stunned", "Can we just...[pause=35] get back to the introductions?")

		GAME:WaitFrames(50)
		GROUND:CharTurnToCharAnimated(partner, lily, 4)

		Dialogue(lily, "Happy", "Hehe, of course, my dear!")
		SOUND:PlaySE("Battle/EVT_Emote_Sweatdrop")
		GROUND:CharSetEmote(partner, "sweatdrop", 1)
		GAME:WaitFrames(90)
		UI:SetSpeaker('', true, partner.CurrentForm.Species, partner.CurrentForm.Form, partner.CurrentForm.Skin, partner.CurrentForm.Gender)
		UI:SetSpeakerEmotion("Pain")
		UI:WaitShowDialogue("(Why did [color=#00ffff]Celia[color] have to teach her Attract...)")

		GAME:WaitFrames(60)
		Dialogue(partner, "Normal", "Anyway.[br]Like I said before,[pause=20] this is " .. lily:GetDisplayName()..",[pause=30] a member of ours and the representative of the [color=#03f8fc]Shops Guild[color] assigned to come here to sell equipment.")
		Dialogue(partner, "Normal", "You've already met the guild's leader,[pause=30] [color=#00ffff]Jacques[color],[pause=30] the [color=#00ff00]Thievul[color] you saw with [color=#00ffff]Ma'am[color] in that clearing.")
		Dialogue(player, "Stunned", "Oh...[br]So that's his name...")
		Dialogue(player, "Worried", "Wait,[pause=50] but "..lily:GetDisplayName().."...")
		Dialogue(lily, "Happy", "Yes, love?")
		GAME:WaitFrames(40)
		Dialogue(player, "Worried", "Don't you look a little too young to be working in two places at the same time?")

		UI:SetSpeaker('', true, player.CurrentForm.Species, player.CurrentForm.Form, player.CurrentForm.Skin, player.CurrentForm.Gender)
		UI:SetSpeakerEmotion("Pain")
		UI:WaitShowDialogue("(And don't call me that...)")
		GAME:WaitFrames(60)
		
		Dialogue(lily, "Special3", "Oh, thank you![br]You look very young as well, "..player:GetDisplayName().. "! ".. STRINGS:Format("\\u2661"))
		Dialogue(player, "Special3", "I didn't mean it like that...")

		GAME:WaitFrames(60)
		Dialogue(lily, "Happy", "Teehe...[pause=30] I know, dear.")
		Dialogue(lily, "Normal", "To answer your question, I am technically just a member of the [color=#03f8fc]Thieves Guild[color], but since my grandma thinks that going out is dangereous for me, [color=#00ffff]Jacques[color] lets me help sell his things here so I don't get bored.")
		Dialogue(lily, "Happy", "You could already tell by how easily I stole your heart, couldn't you?")
		GAME:WaitFrames(60)
		Dialogue(player, "Special3", "...")
		Dialogue(player, "Special3", "You're weird...")
		GAME:WaitFrames(70)
		Dialogue(player, "Worried", "Wait,[pause=20] your grandma?")
		GAME:WaitFrames(50)

		Dialogue(lily, "Worried", "Did no one tell you?")
		Dialogue(lily, "Normal", "[color=#00ffff]Celia[color], the [color=#00ff00]Azumarill[color] that cooks our dinner.")
		Dialogue(lily, "Happy", "That's my grandma!")
		Dialogue(player, "Stunned", "Woah...[br]I thought that [color=#00ff00]Plusle[color] and [color=#00ff00]Minun[color] were the only family around here...")

		Dialogue(lily, "Special0", "Well, now you know it's not!")
	
		GAME:WaitFrames(70)
		Dialogue(player, "Worried", "Can I ask you the last question, " ..lily:GetDisplayName().."?")

		Dialogue(lily, "Special3", "Go for it, dear.[br]I can't think of anything better than speaking with you, anyway!")
		
		Dialogue(player, "Worried", "You run the shop, right?")
		Dialogue(lily, "Happy", "Yeah!")
		Dialogue(lily, "Worried", "Why do you ask, love?")
		
		Dialogue(player, "Worried", "How come you've got nothing to sell?")
		GAME:WaitFrames(50)

		Dialogue(lily, "Normal", "Well, that's simple.[br]The stock from the [color=#03f8fc]Shops Guild[color] is stolen from shops all over the world or taken from dungeons,[pause=30] so how much I and other sellers sell depends on what others they steal or find.")
		Dialogue(lily, "Sad", "Today was a pretty bad day, so I was handed little stock to share.")
		Dialogue(lily, "Happy", "But not to worry, my dear![br]Tomorrow will be a bright new day!")

		Dialogue(player, "Worried", "...")
		Dialogue(player, "Worried", "I guess it makes sense.[br]No one would sell stuff to thieves, right?")
		
		Dialogue(lily, "Happy", "Exactly!")
		GAME:WaitFrames(70)
		Dialogue(partner, "Normal", "Well, it was nice talking to you, " .. lily:GetDisplayName() .. ", but we should be going now.")
		GROUND:CharTurnToChar(lily, partner)

		Dialogue(lily, "Happy", "Don't worry about it.[pause=0] I should start tidying up the stand anyway.")

		GROUND:CharTurnToChar(lily, player)
		Dialogue(lily, "Normal", "It was nice meeting you "..player:GetDisplayName()..".[br]I really enjoyed our short time together.")
		Dialogue(lily, "Normal", "And you know...[br]If you ever feel bored or "..partner:GetDisplayName().." leaves you alone while she does something...")
		Dialogue(lily, "Happy", "You're always welcome here to visit!")
		Dialogue(lily, "Special0", "And who knows...[pause=40] Maybe we could go out together and have one of my grandma's famous smoothies! " .. STRINGS:Format("\\u2661"))
		GAME:WaitFrames(30)

		SOUND:PlaySE("Battle/EVT_Emote_Sweatdrop")
		GROUND:CharSetEmote(player, "sweatdrop", 1)

		GAME:WaitFrames(60)
		Dialogue(player, "Stunned", "I'll...[pause=40] think about it...")
		GAME:WaitFrames(50)
		Dialogue(lily, "Special0", "That's enough for me...")
		Dialogue(lily, "Special0", "See you soon, sweetie!")
		Dialogue(player, "Stunned", "Bye...")


	
		--STRINGS:Format("\\u2661") is the unicode heart character
		SV.guild.presented_to_lily = true
		

	else
		if not SV.guildmasters_office.officially_joined then
			
			Dialogue(lily, "Special3", player:GetDisplayName()..", sweetie, I know you'd love to spend more time with me, but I need to tidy up the stand.")
			Dialogue(lily, "Special0", "I promise I'll be at the morning briefing tomorrow, so don't worry about not talking to me again.")
			Dialogue(lily, "Special0", "See you again tomorrow! "..STRINGS:Format("\\u2661"))


		else
			if SV.progression.chapter == 2 then
				if not SV.progression.first_day_done then
					if not SV.special_dialogue.c2_lily_diag then
				  		
				  		CommonFunctions.Dialogue(lily, 3, "Happy", "Hello there, my sweet " .. player:GetDisplayName() .. "!")
				  		CommonFunctions.Dialogue(lily, 3, "Happy", "The shop's stock is full again, so we're back open now!")
			
				  		
						SV.special_dialogue.c2_lily_diag = true
					end
			
			
				end

			end
			DEBUG.EnableDbgCoro() --Enable debugging this coroutine
    
			local state = 0
			local repeated = false
			local cart = {}
			local catalog = { }
			if not SV.refreshed_shop_stock then 
				shop_area.GenerateShopStock()
			end
			for ii = 1, #SV.shop_stock, 1 do
				local itemEntry = RogueEssence.Data.DataManager.Instance:GetItem(SV.shop_stock[ii])
			  local item = RogueEssence.Dungeon.InvItem(SV.shop_stock[ii], false, itemEntry.MaxStack)
		  
			  --item price is 5 times the sell value. 
			  local item_data = { Item = item, Price = item:GetSellValue() * 5 }
			  table.insert(catalog, item_data)
			end
			--The shop should be coded below this line, so that any dialogue before can be added.
			local hero = CH('PLAYER')
			local partner = CH('Teammate1')
			local chara = CH('purrloin')
			chara.IsInteracting = true
			partner.IsInteracting = true
			UI:SetSpeaker(chara)
			
			GROUND:CharSetAnim(partner, 'None', true)
			GROUND:CharSetAnim(hero, 'None', true)

			
				  
			GROUND:CharTurnToChar(hero, chara)
			local coro1 = TASK:BranchCoroutine(function() GROUND:CharTurnToCharAnimated(partner, chara, 4) end)
		  
			
			  while state > -1 do
				  if state == 0 then
						UI:SetSpeakerEmotion("Special3")

					  local msg = STRINGS:Format("Hello, my dear " .. player:GetDisplayName() .."! Welcome to my shop!")
					  if repeated then
							UI:SetSpeakerEmotion("Normal")

						  msg = STRINGS:Format("Can I help you with anything else?")
					  end
					  local shop_choices = {STRINGS:Format("Buy"), STRINGS:Format("Sell"),
					  STRINGS:FormatKey("MENU_INFO"),
					  STRINGS:FormatKey("MENU_EXIT")}
					  UI:BeginChoiceMenu(msg, shop_choices, 1, 4)
					  UI:WaitForChoice()
					  local result = UI:ChoiceResult()
					  repeated = true
					  if result == 1 then
						  if #catalog > 0 then
						
							UI:SetSpeakerEmotion("Normal")
							UI:WaitShowDialogue(STRINGS:Format("Feel free to take a look around! (And remember you can use {0} to select multiple items.)", STRINGS:LocalKeyString(26)))
							  state = 1
						  else
							UI:SetSpeakerEmotion("Worried")

							  UI:WaitShowDialogue("I'm sorry, but I'm completely out of things to sell!")
							  UI:SetSpeakerEmotion("Happy")
							  UI:WaitShowDialogue("Don't worry, however![pause=0] Tomorrow I'll have a new stock for you two!")
						  end
					  elseif result == 2 then
						  local bag_count = GAME:GetPlayerBagCount()
						  if bag_count > 0 then
								UI:SetSpeakerEmotion("Worried")

							  UI:WaitShowDialogue("Hmmm,[pause=30] it's not usual that Pok√©mon come here to sell...")
							  UI:SetSpeakerEmotion("Normal")

							  UI:WaitShowDialogue(STRINGS:Format("But sure, let's see what you have! (You can use {0} to select multiple items.)", STRINGS:LocalKeyString(26)))
							  state = 3
						  else
							  UI:SetSpeakerEmotion("Worried")
							  UI:WaitShowDialogue("How do you expect to sell something if you don't have anything on you?")
							  UI:SetSpeakerEmotion("Normal")
						  end
					  elseif result == 3 then
							UI:SetSpeakerEmotion("Normal")
							UI:WaitShowDialogue("This is the guild's shop.")

						  UI:WaitShowDialogue("I sell things to help you in dungeons,[pause=30] ranging from berries to orbs and even magical wands!")
							UI:SetSpeakerEmotion("Worried")

						  UI:WaitShowDialogue("As you know, I don't know how reliable [color=#00ffff]Jacques[color]'s supply can be, so I may not have anything to give you sometimes.")
						  UI:SetSpeakerEmotion("Happy")
						  
						  UI:WaitShowDialogue("Hopefully that won't happen!")
						
					  else
							UI:SetSpeakerEmotion("Special3")
						
						  UI:WaitShowDialogue("Thank you ".. player:GetDisplayName() .."![br]Please come again soon!")
						  state = -1
					  end
				  elseif state == 1 then
					  UI:ShopMenu(catalog)
					  UI:WaitForChoice()
					  local result = UI:ChoiceResult()
					  if #result > 0 then
						  local bag_count = GAME:GetPlayerBagCount() + GAME:GetPlayerEquippedCount()
						  local bag_cap = GAME:GetPlayerBagLimit()
						  if bag_count == bag_cap then
							  UI:SetSpeakerEmotion("Happy")
							  UI:WaitShowDialogue("I'd love to sell things to you, my dear " .. player:GetDisplayName() .. "...")
							  UI:SetSpeakerEmotion("Worried")
							  UI:WaitShowDialogue("But your bag is a bit too full.")
							  UI:SetSpeakerEmotion("Normal")
							  UI:WaitShowDialogue("Come back when you've made some space.")
						  else
							  cart = result
							  state = 2
						  end
					  else
						  state = 0
					  end
				  elseif state == 2 then
					  local total = 0
					  for ii = 1, #cart, 1 do
						  total = total + catalog[cart[ii]].Price
					  end
					  local msg
					  if total > GAME:GetPlayerMoney() then
						  UI:SetSpeakerEmotion("Worried")
						  UI:WaitShowDialogue("Looks like you're a bit short on cash...")
						  UI:SetSpeakerEmotion("Normal")
						  UI:WaitShowDialogue("You should get some more before trying to buy again.")

						  state = 1
					  else
						  if #cart == 1 then
							UI:SetSpeakerEmotion("Normal")

							  local name = catalog[cart[1]].Item:GetDisplayName()
							  msg = STRINGS:Format("{2} {1}? That'll make [color=#00ffff]{0}[color]".. STRINGS:Format("\\uE024")..".", total, name, shop_area.GetItemArticle(catalog[cart[1]].Item, true))
						  else
							UI:SetSpeakerEmotion("Worried")

							  msg = STRINGS:Format("All of that together should come to [color=#00ffff]{0}[color] ".. STRINGS:Format("\\uE024")..". Is that okay with you?", total)
						  end
						  UI:ChoiceMenuYesNo(msg, false)
						  UI:WaitForChoice()
						  result = UI:ChoiceResult()
						
						 
						 --UI:WaitShowDialogue(STRINGS:Format("\\u266A")) Musical note



						  if result then
							  GAME:RemoveFromPlayerMoney(total)
							  for ii = 1, #cart, 1 do
								  local item = catalog[cart[ii]].Item
								  GAME:GivePlayerItem(item.ID, item.Amount)
							  end
							  for ii = #cart, 1, -1 do
								  table.remove(catalog, cart[ii])
								  table.remove(SV.DailyFlags.GreenKecleonStock, cart[ii])
							  end
							  
							  cart = {}
							  SOUND:PlayBattleSE("DUN_Money")
							UI:SetSpeakerEmotion("Happy")

							  UI:WaitShowDialogue("Thank you!" .. STRINGS:Format("\\u266A") .. "[br]Here you go!")
							  state = 0
						  else
							  state = 1
						  end
					  end
				  elseif state == 3 then
					  UI:SellMenu()
					  UI:WaitForChoice()
					  local result = UI:ChoiceResult()
					  
					  if #result > 0 then
						  cart = result
						  state = 4
					  else
						  state = 0
					  end
				  elseif state == 4 then
					  local total = 0
					  for ii = 1, #cart, 1 do
						  local item
						  if cart[ii].IsEquipped then
							  item = GAME:GetPlayerEquippedItem(cart[ii].Slot)
						  else
							  item = GAME:GetPlayerBagItem(cart[ii].Slot)
						  end
						  total = total + item:GetSellValue()
					  end
					  local msg
					  if #cart == 1 then
						  local item
						  if cart[1].IsEquipped then
							  item = GAME:GetPlayerEquippedItem(cart[1].Slot)
						  else
							  item = GAME:GetPlayerBagItem(cart[1].Slot)
						  end
							UI:SetSpeakerEmotion("Worried")

						  msg = STRINGS:Format("I think I can give you [color=#00ffff]{0}[color] ".. STRINGS:Format("\\uE024") .." for that {1}.[pause=0] What do you think?", total, item:GetDisplayName())
					  else
						UI:SetSpeakerEmotion("Worried")

						  msg = STRINGS:Format("I think I can give you [color=#00ffff]{0}[color] ".. STRINGS:Format("\\uE024") .." for all of that.[pause=0] What do you say?", total)
					  end
					  UI:ChoiceMenuYesNo(msg, false)
					  UI:WaitForChoice()
					  result = UI:ChoiceResult()
					  
					  if result then
						  for ii = #cart, 1, -1 do
							  if cart[ii].IsEquipped then
								  GAME:TakePlayerEquippedItem(cart[ii].Slot)
							  else
								  GAME:TakePlayerBagItem(cart[ii].Slot)
							  end
						  end
						  SOUND:PlayBattleSE("DUN_Money")
						  GAME:AddToPlayerMoney(total)
						  cart = {}
							UI:SetSpeakerEmotion("Happy")

						  UI:WaitShowDialogue("Alright![br]I'm sure [color=#00ffff]Jacques[color] will be happy to have this!")
						  state = 0
					  else
						  state = 3
					  end
				  end
			  end
			  TASK:JoinCoroutines({coro1})
			  partner.IsInteracting = false
			  chara.IsInteracting = false
			  
			  GROUND:CharEndAnim(partner)
			  GROUND:CharEndAnim(hero)
			  GROUND:CharEndAnim(chara)
			



		end

	end
	GAME:CutsceneMode(false)


end

function Dialogue(sp, emote, txt)
	UI:SetSpeaker(sp)
	UI:SetSpeakerEmotion(emote)
	UI:WaitShowDialogue(txt)
   
  
end
function shop_area.Bank_Action(obj, activator)
	local player = activator
	local partner = CH('Teammate1')
	local lupin = CH('lyc')
	
	GROUND:CharTurnToChar(partner, lupin)

	--Lupin like the harry potter guy 
	if not SV.guild.presented_to_lupin then
		GAME:CutsceneMode(true)

		GROUND:CharTurnToChar(lupin, partner)

		UI:SetSpeaker(STRINGS:Format("\\uE040"), true, lupin.CurrentForm.Species, lupin.CurrentForm.Form, lupin.CurrentForm.Skin, lupin.CurrentForm.Gender)
		UI:SetSpeakerEmotion('Happy')

		UI:WaitShowDialogue("Yo, ".. partner:GetDisplayName().. "!")
		UI:WaitShowDialogue("Wassup?[br]Here to check on your money?")

		Dialogue(partner, "Happy", "Hi "..lupin:GetDisplayName().."!")
		Dialogue(partner, "Normal", "No, I'm not here for that today.")

		GROUND:CharTurnToCharAnimated(partner, player, 4)
		GROUND:CharTurnToChar(lupin, player)

		Dialogue(partner, "Normal", "This is " .. player:GetDisplayName()..", a new member of our guild.")
		GROUND:CharTurnToCharAnimated(partner, lupin, 4)
		Dialogue(partner, "Happy", "I'm showing him around and introducing him to everyone that's a regular here!")
	
		Dialogue(lupin, "Normal", "Oh,[pause=20] for real?")
		Dialogue(lupin, "Happy", "Then nice to meet you, "..player:GetDisplayName().."!")
		Dialogue(lupin, "Happy", "I'm "..lupin:GetDisplayName()..",[pause=20] this place's banker!")
		Dialogue(lupin, "Happy", "Basically you give me your money and I save it so you don't have to carry it on you!")
		GAME:WaitFrames(60)
	
		GROUND:CharSetEmote(lupin, "happy", 0)
		Dialogue(lupin, "Joyous", "And hope I won't spend it either!")
		GROUND:CharSetEmote(lupin, "happy", 1)
		GAME:WaitFrames(120)
		GROUND:CharSetEmote(lupin, "sweatdrop", 1)
		SOUND:PlaySE("Battle/EVT_Emote_Sweatdrop")
		GAME:WaitFrames(80)

		Dialogue(lupin, "Normal", "Come on, don't look at me like that.")
		Dialogue(lupin, "Happy", "I was just joking!")
		GAME:WaitFrames(20)

		GROUND:CharSetEmote(player, "sweatdrop", 1)
		GROUND:CharSetEmote(partner, "sweatdrop", 1)
		SOUND:PlaySE("Battle/EVT_Emote_Sweatdrop")
		GAME:WaitFrames(90)

		--If you have talked with illusion before this, special dialogue is shown.
		if SV.guild.presented_to_illusion then
			Dialogue(player, "Worried", "You won't happen to be friends with [color=#00ffff]Kit[color], will you?")
			Dialogue(lupin, "Happy", "Heh,[pause=20] what gave it away?")
			GAME:WaitFrames(50)

		end
		Dialogue(lupin, "Normal", "Anyway.[br]I'm pretty bored from the oh so exciting banker job.")

		Dialogue(lupin, "Happy", "So I wanna know more about ya!")
		Dialogue(lupin, "Normal", "What brings you to join the guild?")
		Dialogue(lupin, "Worried", "There's not been a single new face around here in forever!")
		Dialogue(lupin, "Normal", "So why the sudden change?")
		GAME:WaitFrames(60)
		Dialogue(partner, "Worried", "Well...")
		Dialogue(player, "Worried", "It's kind of...[pause=40] complicated.")
		GAME:WaitFrames(50)

		Dialogue(lupin, "Normal", "Let me guess...[br]Something forced you?")

		Dialogue(player, "Worried", "Kind of...")
		Dialogue(player, "Pain", "If that something walks on two feet, is a [color=#00ff00]Salazzle[color] and calls herself [color=#00ffff]Ma'am[color]...")
		GAME:WaitFrames(60)

		Dialogue(lupin, "Worried", "Oof, that sounds tough...")
		Dialogue(lupin, "Worried", "But why would she force you to do something like that?")

		Dialogue(partner, "Worried", player:GetDisplayName().." says he's got amnesia, but [color=#00ffff]Ma'am[color] thinks he may be an explorer, so since he knew too much about us, she offered him to either join after a test or...")
		Dialogue(partner, "Worried", "Well,[pause=30] you know.")
		GAME:WaitFrames(40)

		Dialogue(lupin, "Worried", "I see...")
		Dialogue(lupin, "Worried", "Well, you're not an explorer, are you?")

		Dialogue(player, "Stunned", "Of course not!")
		GAME:WaitFrames(50)

		Dialogue(lupin, "Joyous", "Then you shouldn't worry about it!")
		Dialogue(lupin, "Happy", "I'm sure she'll come to believe you someday.")
		GAME:WaitFrames(60)

		Dialogue(player, "Worried", "You think so?")

		Dialogue(lupin, "Happy", "Well, you're a member of her guild now,[pause=30] so she has to trust you at least a bit!")
		Dialogue(lupin, "Normal", "Just don't do anything to break her or anyone's trust and you should be good.")
		GAME:WaitFrames(50)

		Dialogue(player, "Worried", "...")
		GAME:WaitFrames(50)

		Dialogue(lupin, "Normal", "That aside,[pause=30] it was nice talking with you, "..player:GetDisplayName()..".")
		Dialogue(lupin, "Happy", "I'm gonna stay here for a little more, so if you want to hand me some money, just talk to me again!")

		Dialogue(player, "Happy", "Okay![br]Bye, "..lupin:GetDisplayName().."!")
		Dialogue(partner, "Happy", "See you!")

		SV.guild.presented_to_lupin = true
	else
		DEBUG.EnableDbgCoro()
		--Open the bank 
		local player = CH('PLAYER')
		local partner = CH('Teammate1')
		local chara = CH('lyc')
		chara.IsInteracting = true
		partner.IsInteracting = true
		UI:SetSpeaker(chara)
		GROUND:CharSetAnim(partner, 'None', true)
		GROUND:CharSetAnim(player, 'None', true)
		GROUND:CharSetAnim(chara, 'None', true)
			
		GROUND:CharTurnToChar(partner, chara)
		local coro1 = TASK:BranchCoroutine(function() GROUND:CharTurnToCharAnimated(partner, chara, 4) end)
		
		local state = 0
		local repeated = false
		
		while state > -1 do
			
			local player_money = GAME:GetPlayerMoney()
			local bank_choices = { { STRINGS:FormatKey('MENU_STORAGE_MONEY'), true},
			{ STRINGS:FormatKey('MENU_INFO'), true},
			{ STRINGS:FormatKey("MENU_CANCEL"), true}}
			
			UI:SetSpeakerEmotion('Happy')
			
			local msg = STRINGS:Format(STRINGS:Format("Yo {0} and {1}! Welcome to the bank!", player:GetDisplayName(), partner:GetDisplayName()))
			if repeated then msg = STRINGS:Format("Need anything else?") end
			
			UI:BeginChoiceMenu(msg, bank_choices, 1, 3)
			UI:WaitForChoice()
			local result = UI:ChoiceResult()	
			
			if result == 1 then
				repeated = true
				UI:SetSpeakerEmotion('Worried')
				UI:WaitShowDialogue("Let's see what you guys have over here...")
				UI:BankMenu()
				UI:WaitForChoice()
				local difference = math.abs(player_money - GAME:GetPlayerMoney())
				if player_money > GAME:GetPlayerMoney() then --deposited money
					UI:SetSpeakerEmotion('Happy')
					UI:WaitShowDialogue("Sure, I'll keep your[color=#00ffff]" .. difference .. "[color]".. STRINGS:Format("\\uE024") .. " safe!")
				elseif player_money < GAME:GetPlayerMoney() then --Withdrew money
					UI:SetSpeakerEmotion('Happy')
					UI:WaitShowDialogue("Here you go! [color=#00ffff]" .. difference .."[color]" .. STRINGS:Format("\\uE024") .." for ya!")
					UI:SetSpeakerEmotion('Joyous')
					UI:WaitShowDialogue("Make sure you don't lose it!")
				else 
					UI:SetSpeakerEmotion('Normal')
					UI:WaitShowDialogue("Changed your mind?[pause=0] Sure then.")
				end
				UI:SetSpeakerEmotion('Normal')
			elseif result == 2 then
				repeated = true
				UI:SetSpeakerEmotion('Normal')
				UI:WaitShowDialogue("When you faint inside dungeons, you'll lose most of your money and items.")

				UI:SetSpeakerEmotion('Worried')
				UI:WaitShowDialogue("I can't help you with the items part, that's for sure...")

				UI:SetSpeakerEmotion('Happy')
				UI:WaitShowDialogue("But if you give me your money, even if you faint inside a dungeon, that part will instead be here with me!")
				GAME:WaitFrames(40)
				
				UI:SetSpeakerEmotion('Sigh')
				UI:WaitShowDialogue("Come on,[pause=20] how did you expect a bank to work?")
			else 
				UI:SetSpeakerEmotion('Happy')
				UI:WaitShowDialogue("See you next time, dudes!")
				state = -1
			end
		GAME:CutsceneMode(false)

		end
	
		--TASK:JoinCoroutines({coro1})
	
		
		GAME:CutsceneMode(false)
		chara.IsInteracting = false
		partner.IsInteracting = false
		GROUND:CharEndAnim(partner)
		GROUND:CharEndAnim(player)
		GROUND:CharEndAnim(chara)
	end

	GAME:CutsceneMode(false)

end
function shop_area.Storage_Action(obj, activator)
	local player = activator
	local partner = CH('Teammate1')
	local kathy = CH('Kangaskhan')
	if not SV.guild.presented_to_kathy then
		GAME:CutsceneMode(true)
		GROUND:CharTurnToChar(partner, kathy)

		UI:SetSpeaker(STRINGS:Format("\\uE040"), true, kathy.CurrentForm.Species, kathy.CurrentForm.Form, kathy.CurrentForm.Skin, kathy.CurrentForm.Gender)
		UI:SetSpeakerEmotion('Normal')
		UI:WaitShowDialogue("Welcome to Kangaskhan Storage, blah blah blah.[br]If you want to give me something to keep safe, do it already, or piss off.")

		GAME:WaitFrames(20)
		SOUND:PlaySE("Battle/EVT_Emote_Sweatdrop")
		GROUND:CharSetEmote(player, "sweatdrop", 1)
		GROUND:CharSetEmote(partner, "sweatdrop", 1)
		GAME:WaitFrames(80)
		Dialogue(player, "Stunned", "W-[pause=15]What?")
		UI:SetSpeaker(STRINGS:Format("\\uE040"), true, kathy.CurrentForm.Species, kathy.CurrentForm.Form, kathy.CurrentForm.Skin, kathy.CurrentForm.Gender)
		UI:SetSpeakerEmotion('Determined')
		UI:WaitShowDialogue("Listen, newbie.[pause=0] I'm not im the mood for introductions today.[br]Unless you want to store something, leave me alone.[br]I'm sure there's more members you two can bother.")
	
		GAME:WaitFrames(40)
		SOUND:FadeOutBGM(40)
	
		GROUND:CharTurnToCharAnimated(partner, player, 4)
		Dialogue(partner, "Stunned", "(Pssst![pause=0] "..player:GetDisplayName().."!)")

		GROUND:CharTurnToCharAnimated(player, partner, 4)
		GAME:WaitFrames(60)
			
		Dialogue(player, "Determined", "(What's her deal?)")
		Dialogue(partner, "Worried", "(That's ".. kathy:GetDisplayName()..".)[br](She is a bit...[pause=40] erm...)")
		Dialogue(partner, "Worried", "(Let's say moody.)")
		Dialogue(player, "Determined", "(That's one way to put it!)")
		Dialogue(player, "Determined", "(We didn't even say hello and she was already shooing us off!)")

		Dialogue(partner, "Worried", "(I know, but we can't really do anything about it.)[br](She's just like that.)")
		GAME:WaitFrames(50)
		
		Dialogue(kathy, "Normal", "You know I can still hear you, right?")

		SOUND:PlaySE('Battle/EVT_Emote_Exclaim_2')
		GROUND:CharSetEmote(player, "exclaim", 1)
		GROUND:CharSetEmote(partner, "exclaim", 1)

		GAME:WaitFrames(60)
		GROUND:CharTurnToCharAnimated(player, kathy, 3)
		GROUND:CharTurnToCharAnimated(partner, kathy, 3)
		GAME:WaitFrames(30)
		Dialogue(kathy, "Determined", "If you two wanna talk about me you could at least do it somewhere else.")

		Dialogue(player, "Determined", "At least you could tell me what you do when I just came here to say hi instead of being like this![br]Maybe then we wouldn't have to talk behind your back!")
			
		GAME:WaitFrames(50)
		Dialogue(kathy, "Determined", "Want me to tell you what I do?")
			
		Dialogue(kathy, "Angry", "I store your items so that you don't lose them in the dungeons you go to![pause=0] Just like my cousin in [color=#fcacac]Treasure Town[color].[br]But unlike her, I will not hesitate to kick your ass if it comes down to it!")
	
		GAME:WaitFrames(70)
		Dialogue(kathy, "Determined", "You're lucky my kid is just here with me, or you'd be a pancake squished against this cave's wall, .")
		GAME:WaitFrames(70)

		Dialogue(partner, "Stunned", "Umm...[br]I think it's better if we just leave for now.")
		
		Dialogue(kathy, "Determined", "Make me a favour and don't come back unless you need something.")
		Dialogue(player, "Determined", "Hopefully not too soon.")
		GAME:WaitFrames(40)

		SOUND:PlaySE("Battle/EVT_Emote_Sweatdrop")
		GROUND:CharSetEmote(partner, "sweatdrop", 1)
		GAME:WaitFrames(70)
		Dialogue(partner, "Stunned", "Oh dear...")
		SV.guild.presented_to_kathy = true
		GAME:CutsceneMode(false)
		SOUND:PlayBGM("Wigglytuff's Guild.ogg", true) 

	else
		if not SV.guildmasters_office.officially_joined then
			GAME:CutsceneMode(true)
			GROUND:CharTurnToChar(partner, player)
			GROUND:CharTurnToChar(player, partner)
			Dialogue(partner, "Worried", player:GetDisplayName()..", I think it's better if we simply just leave "..kathy:GetDisplayName().." alone for today.")
			Dialogue(partner, "Normal", "Let's keep looking around the place instead.")
			


			GAME:CutsceneMode(false)


		else
		if SV.guild.storagekeeper_annoyed_times < 5 then
			DEBUG.EnableDbgCoro()
	
			local hero = CH('PLAYER')
			local partner = CH('Teammate1')
			local chara = CH('Kangaskhan')
			chara.IsInteracting = true
			partner.IsInteracting = true
			UI:SetSpeaker(chara)
			GROUND:CharSetAnim(partner, 'None', true)
			GROUND:CharSetAnim(hero, 'None', true)
			GROUND:CharSetAnim(chara, 'None', true)
				
			GROUND:CharTurnToChar(hero, chara)
			local coro1 = TASK:BranchCoroutine(function() GROUND:CharTurnToCharAnimated(partner, chara, 4) end)
			
		
			local state = 0
			local repeated = false
		
			

			while state > -1 do
				local has_items = GAME:GetPlayerBagCount() > 0
				local has_equipment = GAME:GetPlayerEquippedCount() > 0
				local has_storage = GAME:GetPlayerStorageCount() > 0
			
				local item_count = GAME:GetPlayerBagCount()
			
				local storage_choices = { { STRINGS:FormatKey('MENU_STORAGE_STORE'), has_items or has_equipment},
				{ STRINGS:FormatKey('MENU_STORAGE_TAKE_ITEM'), has_storage},
				{ STRINGS:FormatKey('MENU_STORAGE_STORE_ALL'), has_items},
				{ STRINGS:FormatKey('MENU_INFO'), true},
				{ STRINGS:FormatKey("MENU_CANCEL"), true}}
			
				if SV.guild.storagekeeper_annoyed_times == 3 then
					UI:SetSpeakerEmotion('Determined')			

					local msg = STRINGS:Format("You're starting to annoy me, you two.")
					UI:BeginChoiceMenu(msg, storage_choices, 1, 5)
				elseif SV.guild.storagekeeper_annoyed_times == 4 then
					UI:SetSpeakerEmotion('Determined')			

					local msg = STRINGS:Format("I swear that if I see your faces here just one more time...[br]Don't you have anything else to do?")
					UI:BeginChoiceMenu(msg, storage_choices, 1, 5)
				else
				
					local msg = STRINGS:Format("Welcome to Kangaskhan Storage, blah blah blah.")
					UI:BeginChoiceMenu(msg, storage_choices, 1, 5)
				end
				if repeated then 
					local msg = STRINGS:Format("Anything else?") 
					UI:SetSpeakerEmotion('Normal')	
					UI:BeginChoiceMenu(msg, storage_choices, 1, 5)
						
				end
			
				
				UI:WaitForChoice()
				local result = UI:ChoiceResult()	
				UI:SetSpeakerEmotion('Normal')
	
			
				if result == 1 then
					repeated = true
					UI:WaitShowDialogue(STRINGS:Format("What items do you want to give me? (Use {0} to select multiple and make my life easier.)", STRINGS:LocalKeyString(26)))
					UI:StorageMenu()
					UI:WaitForChoice()
					if item_count ~= GAME:GetPlayerBagCount() then 
						UI:SetSpeakerEmotion('Normal')
						UI:WaitShowDialogue(STRINGS:Format("Alright, I'll keep them safe."))
						UI:SetSpeakerEmotion('Determined')
						UI:WaitShowDialogue(STRINGS:Format("And don't you put that face![pause=0] I'm not going to lose them!"))
					end
				elseif result == 2 then
					repeated = true
					UI:WaitShowDialogue(STRINGS:Format("What items do you want to store? (Use {0} to select multiple and make my life easier.)", STRINGS:LocalKeyString(26)))
					UI:WithdrawMenu()
					UI:WaitForChoice()
					if item_count ~= GAME:GetPlayerBagCount() then 
						UI:SetSpeakerEmotion('Normal')
						UI:WaitShowDialogue(STRINGS:Format("There you go."))
						UI:SetSpeakerEmotion('Determined')
						UI:WaitShowDialogue(STRINGS:Format("Hey, what's with that face?[pause=0] I told you they were safe here!"))
					end 
				elseif result == 3 then
					repeated = true
					shop_area.SendInvToStorage(true, false, true)
					UI:SetSpeakerEmotion('Normal')
					UI:WaitShowDialogue(STRINGS:Format("Handing me everything you have?[br]Wow, thanks for making my work harder.[br]And don't worry about your equipped items. [pause=0]They're not going anywhere."))
				elseif result == 4 then
					repeated = true
					UI:SetSpeakerEmotion('Worried')
					UI:WaitShowDialogue(STRINGS:Format("You want to know what I do here?"))
					UI:SetSpeakerEmotion('Normal')
					UI:WaitShowDialogue(STRINGS:Format("I don't have anything better to do, so why not."))
					UI:WaitShowDialogue(STRINGS:Format("When you faint inside dungeons, you'll lose most of your money and items, [pause=40]but I'm sure you already knew that."))
					UI:WaitShowDialogue(STRINGS:Format("So to avoid that or to free your bag, you give me the items you don't want to lose, and I keep them safe here."))
					UI:WaitShowDialogue(STRINGS:Format("Sounds simple enough, doesn't it?"))
					UI:WaitShowDialogue(STRINGS:Format("At least for the ones that just hand the items..."))

				else 
					UI:SetSpeakerEmotion('Normal')
					UI:WaitShowDialogue(STRINGS:Format("You're done?"))
					UI:SetSpeakerEmotion('Determined')
					UI:WaitShowDialogue(STRINGS:Format("Go bother someone else, if you don't mind."))
					SV.guild.storagekeeper_annoyed_times = SV.guild.storagekeeper_annoyed_times + 1
					state = -1
				end
			end
			--reimplementing parts of endconversation
			TASK:JoinCoroutines({coro1})
			partner.IsInteracting = false
			chara.IsInteracting = false
			
			GROUND:CharEndAnim(partner)
			GROUND:CharEndAnim(hero)
			GROUND:CharEndAnim(chara)
			

		elseif SV.guild.storagekeeper_annoyed_times == 5 then
			
			if not SV.guild.storagekeeper_is_annoyed then
			
			
				GAME:CutsceneMode(true)

				GROUND:CharTurnToChar(partner, kathy)

				Dialogue(kathy, "Determined", "Look, little brats.[br]There's no way you need me this many times in this little time!")
				Dialogue(kathy, "Determined", "I already warned you before.[br]Go do one of your tasks because I'm not going to take or hand anymore of your items!")
				Dialogue(player, "Surprised", "What?")
				Dialogue(partner, "Surprised", "You can't do that!")
				Dialogue(kathy, "Determined", "Are you sure? Because I am the one that runs this stand and the one that has your items.")	
				Dialogue(kathy, "Determined", "You should have thought better.")
				Dialogue(player, "Stunned", "B-[pause=15]But!")
				GROUND:CharTurnToCharAnimated(partner, player, 4)
				GROUND:CharTurnToCharAnimated(player, partner, 4)

				Dialogue(partner, "Worried", "It's better if we just leave.[pause=0] There's no point in trying to bargain with her.")
				Dialogue(partner, "Worried", "We should manage our item handling more efficiently tomorrow.")
				Dialogue(player, "Determined", "Ugh...[br]Fine.[pause=0] Let's get out of here.")
				GAME:CutsceneMode(false)
				SV.guild.storagekeeper_is_annoyed = true
			else
				Dialogue(kathy, "Determined", "Piss off, brats.")
				
			end

			
		end
	end
	end

end




return shop_area

