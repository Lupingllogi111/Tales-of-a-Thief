--[[
    init.lua
    Created: 05/15/2024 14:21:39
    Description: Autogenerated script file for the map concealing_shortcut.
]]--
-- Commonly included lua functions and data
require 'common'
require 'CommonFunctions'
-- Package name
local concealing_shortcut = {}

-- Local, localized strings table
-- Use this to display the named strings you added in the strings files for the map!
-- Ex:
--      local localizedstring = MapStrings['SomeStringName']
local MapStrings = {}

-------------------------------
-- Map Callbacks
-------------------------------
---concealing_shortcut.Init(map)
--Engine callback function
function concealing_shortcut.Init(map)

  --This will fill the localized strings table automatically based on the locale the game is 
  -- currently in. You can use the MapStrings table after this line!
  MapStrings = COMMON.AutoLoadLocalizedStrings()
  COMMON.RespawnAllies()
  local partners = CH('Teammate1')
    AI:SetCharacterAI(partners, "ai.ground_partner", CH('PLAYER'), partners.Position)
    AI:EnableCharacterAI(partners)
    partners.CollisionDisabled = true
	GROUND:AddMapStatus("clouds_overhead")

end

---concealing_shortcut.Enter(map)
--Engine callback function
function concealing_shortcut.Enter(map)
	local partners = CH('Teammate1')
	AI:DisableCharacterAI(partners)
	if SV.partner.entrance == 0 then
		--Nothing

	elseif SV.partner.entrance == 1 then
		--Enter from the top.
		local marker = MRKR('mrkr_2')
    	GROUND:TeleportTo(partners, marker.Position.X, marker.Position.Y, marker.Direction)


	elseif SV.partner.entrance == 2 then
		local marker = MRKR('mrkr_4')
    	GROUND:TeleportTo(partners, marker.Position.X, marker.Position.Y, marker.Direction)
		


	end
 	AI:SetCharacterAI(partners, "ai.ground_partner", CH('PLAYER'), partners.Position)
    AI:EnableCharacterAI(partners)
    partners.CollisionDisabled = true


  GAME:FadeIn(20)

end

---concealing_shortcut.Exit(map)
--Engine callback function
function concealing_shortcut.Exit(map)


end

---concealing_shortcut.Update(map)
--Engine callback function
function concealing_shortcut.Update(map)


end

---concealing_shortcut.GameSave(map)
--Engine callback function
function concealing_shortcut.GameSave(map)
  local partner = CH('Teammate1')
  SV.partner.positionX = partner.Position.X
	SV.partner.positionY = partner.Position.Y
	SV.partner.direction = DirToNum(partner.Direction)


end

---concealing_shortcut.GameLoad(map)
--Engine callback function
function concealing_shortcut.GameLoad(map)
  local partners = CH('Teammate1')
  GROUND:TeleportTo(partners, SV.partner.positionX, SV.partner.positionY, NumToDir(SV.partner.direction))
  

  AI:SetCharacterAI(partners, "ai.ground_partner", CH('PLAYER'), partners.Position)
  AI:EnableCharacterAI(partners)
  partners.CollisionDisabled = true
  GAME:FadeIn(20)

end
function DirToNum(dir)
	--up is 0, upright is 1, ... up left is 7
	local num = -1
	if dir == Direction.Up then
		num = 0
	elseif dir == Direction.UpRight then
		num = 1
	elseif dir == Direction.Right then
		num = 2
	elseif dir == Direction.DownRight then
		num = 3
	elseif dir == Direction.Down then
		num = 4
	elseif dir == Direction.DownLeft then
		num = 5
	elseif dir == Direction.Left then
		num = 6
	elseif dir == Direction.UpLeft then
		num = 7
	end
	
	return num
	
end
--converts a number to a direction
function NumToDir(num)
	local dir = Direction.None
	if num % 8 == 0 then 
		dir = Direction.Up
	elseif num % 8 == 1 then
		dir = Direction.UpRight
	elseif num % 8 == 2 then
		dir = Direction.Right
	elseif num % 8 == 3 then
		dir = Direction.DownRight
	elseif num % 8 == 4 then
		dir = Direction.Down
	elseif num % 8 == 5 then
		dir = Direction.DownLeft
	elseif num % 8 == 6 then
		dir = Direction.Left
	elseif num % 8 == 7 then
		dir = Direction.UpLeft
	end

	return dir
end 
-------------------------------
-- Entities Callbacks
-------------------------------
function concealing_shortcut.Teammate1_Action(obj, activator)
	GAME:CutsceneMode(true)
	
	if SV.progression.chapter == 2 then
	
		GROUND:CharTurnToCharAnimated(obj, activator, 5)
		GROUND:CharTurnToCharAnimated(activator, obj, 5)
		CommonFunctions.Dialogue(obj, 3, "Normal", "This is a shorcut to the guild that [color=#00ffff]Dexter[color] protects.")
		CommonFunctions.Dialogue(obj, 3, "Normal", "This allows you to skip the dungeon where we found you, but only we know about it.")
		CommonFunctions.Dialogue(obj, 3, "Normal", "That's why [color=#00ffff]Dex[color]'s job is very important.")
		CommonFunctions.Dialogue(obj, 3, "Worried", "If anyone found out we'd be in deep trouble...")
	

	end

	GAME:CutsceneMode(false)

end


function concealing_shortcut.exit_Touch(obj, activator)
  GAME:FadeOut(false, 20)
  SV.partner.entrance = 1
  GAME:EnterZone('thieves_hideout', -1, 4, 1)
end
function concealing_shortcut.shady_entrance_Touch(obj, activator)
	local partner = CH('Teammate1')
	if not SV.progression.first_day_done then
		GAME:CutsceneMode(true)
		
		CommonFunctions.Dialogue(partner, 3, "Worried", activator:GetDisplayName() .. ",[pause=30] this leads to the dungeon we entered for your test.")
		CommonFunctions.Dialogue(partner, 3, "Normal", "We should focus on what [color=#00ffff]Ma'am[color] told us to do today.")
		CommonFunctions.Dialogue(partner, 3, "Normal", "If you want to revisit it, we can come tomorrow if we don't have any special assignments.")

		GAME:CutsceneMode(false)

	else
		GAME:FadeOut(false, 20)
		GAME:EnterZone('thieves_hideout', -1, 2, 1)
	end
	
end
function concealing_shortcut.exit_1_Touch(obj, activator)
	GAME:FadeOut(false, 20)
	SV.partner.entrance = 0
	GAME:EnterZone('conceal_forest', -1, 0, 2)


	
end
return concealing_shortcut

